package main

import (
	"flag"
	"fmt"
	"strings"
	"sync"
)

var cvars = map[string]string{
	"CS_WarnFriendlyDamageInterval":             "Defines how frequently the server notifies clients that a player damaged a friend",
	"achievement_debug":                         "Turn on achievement debug msgs.",
	"achievement_disable":                       "Turn off achievements.",
	"adsp_debug":                                "",
	"ai_debug_los":                              "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.",
	"ai_debug_shoot_positions":                  "",
	"ai_drawbattlelines":                        "",
	"ai_report_task_timings_on_limit":           "",
	"ai_think_limit_label":                      "",
	"ai_vehicle_avoidance":                      "",
	"ammo_338mag_max":                           "",
	"ammo_357sig_max":                           "",
	"ammo_45acp_max":                            "",
	"ammo_50AE_max":                             "",
	"ammo_556mm_box_max":                        "",
	"ammo_556mm_max":                            "",
	"ammo_57mm_max":                             "",
	"ammo_762mm_max":                            "",
	"ammo_9mm_max":                              "",
	"ammo_buckshot_max":                         "",
	"ammo_grenade_limit_default":                "",
	"ammo_grenade_limit_flashbang":              "",
	"ammo_grenade_limit_total":                  "",
	"bot_autodifficulty_threshold_high":         "Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty",
	"bot_autodifficulty_threshold_low":          "Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty",
	"bot_chatter":                               "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.",
	"bot_crouch":                                "",
	"bot_debug":                                 "For internal testing purposes.",
	"bot_debug_target":                          "For internal testing purposes.",
	"bot_defer_to_human_goals":                  "If nonzero and there is a human on the team, the bots will not do the scenario tasks.",
	"bot_defer_to_human_items":                  "If nonzero and there is a human on the team, the bots will not get scenario items.",
	"bot_difficulty":                            "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.",
	"bot_dont_shoot":                            "If nonzero, bots will not fire weapons (for debugging).",
	"bot_freeze":                                "",
	"bot_join_after_player":                     "If nonzero, bots wait until a player joins before entering the game.",
	"bot_join_team":                             "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.",
	"bot_loadout":                               "bots are given these items at round start",
	"bot_mimic":                                 "",
	"bot_mimic_yaw_offset":                      "",
	"bot_quota":                                 "Determines the total number of bots in the game.",
	"bot_quota_mode":                            "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.",
	"bot_randombuy":                             "should bots ignore their prefered weapons and just buy weapons at random?",
	"bot_show_battlefront":                      "Show areas where rushing players will initially meet.",
	"bot_show_nav":                              "For internal testing purposes.",
	"bot_show_occupy_time":                      "Show when each nav area can first be reached by each team.",
	"bot_stop":                                  "If nonzero, immediately stops all bot processing.",
	"bot_traceview":                             "For internal testing purposes.",
	"bot_zombie":                                "If nonzero, bots will stay in idle mode and not attack.",
	"budget_averages_window":                    "number of frames to look at when figuring out average frametimes",
	"budget_background_alpha":                   "how translucent the budget panel is",
	"budget_bargraph_background_alpha":          "how translucent the budget panel is",
	"budget_bargraph_range_ms":                  "budget bargraph range in milliseconds",
	"budget_history_numsamplesvisible":          "number of samples to draw in the budget history window.  The lower the better as far as rendering overhead of the budget panel",
	"budget_history_range_ms":                   "budget history range in milliseconds",
	"budget_panel_bottom_of_history_fraction":   "number between 0 and 1",
	"budget_panel_height":                       "height in pixels of the budget panel",
	"budget_panel_width":                        "width in pixels of the budget panel",
	"budget_panel_x":                            "number of pixels from the left side of the game screen to draw the budget panel",
	"budget_panel_y":                            "number of pixels from the top side of the game screen to draw the budget panel",
	"budget_peaks_window":                       "number of frames to look at when figuring out peak frametimes",
	"budget_show_averages":                      "enable/disable averages in the budget panel",
	"budget_show_history":                       "turn history graph off and on. . good to turn off on low end",
	"budget_show_peaks":                         "enable/disable peaks in the budget panel",
	"bugreporter_uploadasync":                   "Upload attachments asynchronously",
	"bugreporter_username":                      "Username to use for bugreporter",
	"cash_player_bomb_defused":                  "",
	"cash_player_bomb_planted":                  "",
	"cash_player_damage_hostage":                "",
	"cash_player_interact_with_hostage":         "",
	"cash_player_killed_enemy_default":          "",
	"cash_player_killed_enemy_factor":           "",
	"cash_player_killed_hostage":                "",
	"cash_player_killed_teammate":               "",
	"cash_player_rescued_hostage":               "",
	"cash_team_elimination_bomb_map":            "",
	"cash_team_elimination_hostage_map":         "",
	"cash_team_hostage_alive":                   "",
	"cash_team_hostage_interaction":             "",
	"cash_team_loser_bonus":                     "",
	"cash_team_loser_bonus_consecutive_rounds":  "",
	"cash_team_planted_bomb_but_defused":        "",
	"cash_team_rescued_hostage":                 "",
	"cash_team_terrorist_win_bomb":              "",
	"cash_team_win_by_defusing_bomb":            "",
	"cash_team_win_by_hostage_rescue":           "",
	"cash_team_win_by_time_running_out":         "",
	"chet_debug_idle":                           "If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info",
	"cl_allowdownload":                          "Client downloads customization files",
	"cl_allowupload":                            "Client uploads customization files",
	"cl_clanid":                                 "Current clan ID for name decoration",
	"cl_clock_correction":                       "Enable/disable clock correction on the client.",
	"cl_clock_correction_adjustment_max_amount": "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.",
	"cl_clock_correction_adjustment_max_offset": "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.",
	"cl_clock_correction_adjustment_min_offset": "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.",
	"cl_clock_correction_force_server_tick":     "Force clock correction to match the server tick + this offset (-999 disables it).",
	"cl_clock_showdebuginfo":                    "Show debugging info about the clock drift.",
	"cl_clockdrift_max_ms":                      "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.",
	"cl_clockdrift_max_ms_threadmode":           "Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.",
	"cl_cmdrate":                                "Max number of command packets sent to server per second",
	"cl_downloadfilter":                         "Determines which files can be downloaded from the server (all, none, nosounds)",
	"cl_entityreport":                           "For debugging, draw entity states to console",
	"cl_flushentitypacket":                      "For debugging. Force the engine to flush an entity packet.",
	"cl_forcepreload":                           "Whether we should force preloading.",
	"cl_ignorepackets":                          "Force client to ignore packets (for debugging).",
	"cl_language":                               "Language (from Steam API)",
	"cl_logofile":                               "Spraypoint logo decal.",
	"cl_resend":                                 "Delay in seconds before the client will resend the 'connect' attempt",
	"cl_resend_timeout":                         "Total time allowed for the client to resend the 'connect' attempt",
	"cl_showevents":                             "Print event firing info in the console",
	"cl_showpluginmessages":                     "Allow plugins to display messages to you",
	"cl_skipslowpath":                           "Set to 1 to skip any models that don't go through the model fast path",
	"cl_soundfile":                              "Jingle sound file.",
	"cl_timeout":                                "After this many seconds without receiving a packet from the server, the client will disconnect itself",
	"cl_updaterate":                             "Number of packets per second of updates you are requesting from the server",
	"clientport":                                "Host game client port",
	"closecaption":                              "Enable close captioning.",
	"con_enable":                                "Allows the console to be activated.",
	"con_filter_enable":                         "Filters console output based on the setting of con_filter_text. 1 filters completely, 2 displays filtered text brighter than other text.",
	"con_filter_text":                           "Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.",
	"con_filter_text_out":                       "Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.",
	"con_logfile":                               "Console output gets written to this file",
	"cs_ShowStateTransitions":                   "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.",
	"cs_enable_player_physics_box":              "",
	"cs_hostage_near_rescue_music_distance":     "",
	"cssdm_allow_c4":                            "Sets whether C4 is allowed",
	"cssdm_bots_balance":                        "Minimum number of players (bot_quota)",
	"cssdm_enable_equipment":                    "Sets whether the equipment plugin is enabled",
	"cssdm_enabled":                             "Sets whether CS:S DM is enabled",
	"cssdm_ffa_enabled":                         "Sets whether Free-For-All mode is enabled",
	"cssdm_force_mapchanges":                    "Sets whether CS:S DM should force mapchanges",
	"cssdm_mapchange_file":                      "Sets the mapchange file for CS:S DM",
	"cssdm_prot_ctcolor":                        "Sets the spawn color of CTs",
	"cssdm_prot_tcolor":                         "Sets the spawn color of Ts",
	"cssdm_prot_time":                           "Sets time in seconds players are protected for",
	"cssdm_ragdoll_time":                        "Sets ragdoll stay time",
	"cssdm_refill_ammo":                         "Sets whether CS:S DM automatically refills ammo",
	"cssdm_remove_drops":                        "Sets whether dropped items are removed",
	"cssdm_respawn_command":                     "Sets whether clients can manually respawn",
	"cssdm_respawn_wait":                        "Sets respawn wait time",
	"cssdm_spawn_method":                        "Sets how and where players are spawned",
	"cssdm_spawn_protection":                    "Sets whether spawn protection is enabled",
	"cssdm_version":                             "CS:S DM Version",
	"cursortimeout":                             "Seconds before mouse cursor hides itself due to inactivity",
	"custom_bot_difficulty":                     "Bot difficulty for offline play.",
	"debug_visibility_monitor":                  "",
	"demo_recordcommands":                       "Record commands typed at console into .dem files.",
	"developer":                                 "Set developer message level",
	"disable_static_prop_loading":               "If non-zero when a map loads, static props won't be loaded",
	"display_game_events":                       "",
	"dsp_db_min":                                "",
	"dsp_db_mixdrop":                            "",
	"dsp_dist_max":                              "",
	"dsp_dist_min":                              "",
	"dsp_enhance_stereo":                        "",
	"dsp_mix_max":                               "",
	"dsp_mix_min":                               "",
	"dsp_off":                                   "",
	"dsp_player":                                "",
	"dsp_slow_cpu":                              "",
	"dsp_volume":                                "",
	"enable_debug_overlays":                     "Enable rendering of debug overlays",
	"ent_messages_draw":                         "Visualizes all entity input/output activity.",
	"ff_damage_reduction_bullets":               "How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
	"ff_damage_reduction_grenade":               "How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
	"ff_damage_reduction_grenade_self":          "How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
	"ff_damage_reduction_other":                 "How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
	"fish_dormant":                              "Turns off interactive fish behavior. Fish become immobile and unresponsive.",
	"fog_enable_water_fog":                      "",
	"force_audio_english":                       "Keeps track of whether we're forcing english in a localized language.",
	"fps_max":                                   "Frame rate limiter",
	"fps_max_menu":                              "Frame rate limiter, main menu",
	"fps_screenshot_frequency":                  "While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds when under the given fps.)",
	"fps_screenshot_threshold":                  "Dump a screenshot when the FPS drops below the given value.",
	"func_break_max_pieces":                     "",
	"fx_new_sparks":                             "Use new style sparks.",
	"g_debug_angularsensor":                     "",
	"g_debug_constraint_sounds":                 "Enable debug printing about constraint sounds.",
	"g_debug_ragdoll_removal":                   "",
	"g_debug_trackpather":                       "",
	"g_debug_vehiclebase":                       "",
	"g_debug_vehicledriver":                     "",
	"g_debug_vehicleexit":                       "",
	"g_debug_vehiclesound":                      "",
	"g_jeepexitspeed":                           "",
	"game_mode":                                 "The current game mode (based on game type). See GameModes.txt.",
	"game_type":                                 "The current game type. See GameModes.txt.",
	"global_event_log_enabled":                  "Enables the global event log system",
	"host_flush_threshold":                      "Memory threshold below which the host should flush caches between server instances",
	"host_map":                                  "Current map name.",
	"host_sleep":                                "Force the host to sleep a certain number of milliseconds each frame.",
	"host_timescale":                            "Prescale the clock by this amount.",
	"hostage_debug":                             "Show hostage AI debug information",
	"hostfile":                                  "The HOST file to load.",
	"hostip":                                    "Host game server ip",
	"hostname":                                  "Hostname for server.",
	"hostport":                                  "Host game server port",
	"hud_scaling":                               "Scales hud elements",
	"hunk_track_allocation_types":               "",
	"in_forceuser":                              "Force user input to this split screen player.",
	"inferno_child_spawn_interval_multiplier":   "Amount spawn interval increases for each child",
	"inferno_child_spawn_max_depth":             "",
	"inferno_damage":                            "Damage per second",
	"inferno_debug":                             "",
	"inferno_flame_lifetime":                    "Average lifetime of each flame in seconds",
	"inferno_flame_spacing":                     "Minimum distance between separate flame spawns",
	"inferno_forward_reduction_factor":          "",
	"inferno_friendly_fire_duration":            "For this long, FF is credited back to the thrower.",
	"inferno_initial_spawn_interval":            "Time between spawning flames for first fire",
	"inferno_max_child_spawn_interval":          "Largest time interval for child flame spawning",
	"inferno_max_flames":                        "Maximum number of flames that can be created",
	"inferno_max_range":                         "Maximum distance flames can spread from their initial ignition point",
	"inferno_per_flame_spawn_duration":          "Duration each new flame will attempt to spawn new flames",
	"inferno_scorch_decals":                     "",
	"inferno_spawn_angle":                       "Angular change from parent",
	"inferno_surface_offset":                    "",
	"inferno_velocity_decay_factor":             "",
	"inferno_velocity_factor":                   "",
	"inferno_velocity_normal_factor":            "",
	"ip": "Overrides IP for multihomed hosts",
	"joy_axisbutton_threshold":                   "Analog axis range before a button press is registered.",
	"joy_wingmanwarrior_centerhack":              "Wingman warrior centering hack.",
	"lightcache_maxmiss":                         "",
	"loopsingleplayermaps":                       "",
	"mapcycledisabled":                           "repeats the same map after each match instead of using the map cycle",
	"mat_bumpbasis":                              "",
	"mat_colorcorrection":                        "",
	"mat_debugalttab":                            "",
	"mat_depthbias_normal":                       "",
	"mat_displacementmap":                        "",
	"mat_drawflat":                               "",
	"mat_dynamicPaintmaps":                       "",
	"mat_dynamic_tonemapping":                    "",
	"mat_dynamiclightmaps":                       "",
	"mat_fastnobump":                             "",
	"mat_fillrate":                               "",
	"mat_force_tonemap_scale":                    "",
	"mat_forcedynamic":                           "",
	"mat_fullbright":                             "",
	"mat_leafvis":                                "Draw wireframe of: [0] nothing, [1] current leaf, [2] entire vis cluster, or [3] entire PVS (see mat_leafvis_draw_mask for what does/doesn't get drawn)",
	"mat_loadtextures":                           "",
	"mat_local_contrast_edge_scale_override":     "",
	"mat_local_contrast_midtone_mask_override":   "",
	"mat_local_contrast_scale_override":          "",
	"mat_local_contrast_vignette_end_override":   "",
	"mat_local_contrast_vignette_start_override": "",
	"mat_luxels":                                 "",
	"mat_measurefillrate":                        "",
	"mat_monitorgamma":                           "monitor gamma (typically 2.2 for CRT and 1.7 for LCD)",
	"mat_monitorgamma_tv_enabled":                "",
	"mat_morphstats":                             "",
	"mat_norendering":                            "",
	"mat_normalmaps":                             "",
	"mat_normals":                                "",
	"mat_powersavingsmode":                       "Power Savings Mode",
	"mat_proxy":                                  "",
	"mat_queue_mode":                             "The queue/thread mode the material system should use: -1=default, 0=synchronous single thread, 1=queued single thread, 2=queued multithreaded",
	"mat_queue_priority":                         "",
	"mat_rendered_faces_count":                   "Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use 'mat_rendered_faces_spew' to spew all models rendered in the current frame)",
	"mat_reversedepth":                           "",
	"mat_show_texture_memory_usage":              "Display the texture memory usage on the HUD.",
	"mat_showlowresimage":                        "",
	"mat_showmiplevels":                          "color-code miplevels 2: normalmaps, 1: everything else",
	"mat_softwareskin":                           "",
	"mat_spewalloc":                              "",
	"mat_surfaceid":                              "",
	"mat_surfacemat":                             "",
	"mat_tessellation_accgeometrytangents":       "",
	"mat_tessellation_cornertangents":            "",
	"mat_tessellation_update_buffers":            "",
	"mat_texture_list_content_path":              "The content path to the materialsrc directory. If left unset, it'll assume your content directory is next to the currently running game dir.",
	"mat_wireframe":                              "",
	"mem_incremental_compact_rate":               "Rate at which to attempt internal heap compation",
	"metamod_version":                            "Metamod:Source Version",
	"mm_basedir":                                 "Metamod:Source Base Folder",
	"mm_csgo_community_search_players_min":       "When performing CSGO community matchmaking look for servers with at least so many human players",
	"mm_pluginsfile":                             "Metamod:Source Plugins File",
	"mm_server_search_lan_ports":                 "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.",
	"molotov_throw_detonate_time":                "",
	"motdfile":                                   "The MOTD file to load.",
	"mp_afterroundmoney":                         "amount of money awared to every player after each round",
	"mp_autokick":                                "Kick idle/team-killing/team-damaging players",
	"mp_autoteambalance":                         "",
	"mp_backup_round_file":                       "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt",
	"mp_backup_round_file_last":                  "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.",
	"mp_backup_round_file_pattern":               "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'",
	"mp_buytime":                                 "How many seconds after round start players can buy items for.",
	"mp_c4timer":                                 "how long from when the C4 is armed until it blows",
	"mp_competitive_endofmatch_extra_time":       "After a competitive match finishes rematch voting extra time is given for rankings.",
	"mp_death_drop_defuser":                      "Drop defuser on player death",
	"mp_death_drop_grenade":                      "Which grenade to drop on player death: 0=none, 1=best, 2=current or best",
	"mp_death_drop_gun":                          "Which gun to drop on player death: 0=none, 1=best, 2=current or best",
	"mp_defuser_allocation":                      "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone",
	"mp_display_kill_assists":                    "Whether to display and score player assists",
	"mp_dm_bonus_length_max":                     "Maximum time the bonus time will last (in seconds)",
	"mp_dm_bonus_length_min":                     "Minimum time the bonus time will last (in seconds)",
	"mp_dm_bonus_percent":                        "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.",
	"mp_dm_time_between_bonus_max":               "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)",
	"mp_dm_time_between_bonus_min":               "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)",
	"mp_do_warmup_offine":                        "Whether or not to do a warmup period at the start of a match in an offline (bot) match.",
	"mp_do_warmup_period":                        "Whether or not to do a warmup period at the start of a match.",
	"mp_force_pick_time":                         "The amount of time a player has on the team screen to make a selection before being auto-teamed",
	"mp_forcecamera":                             "Restricts spectator modes for dead players",
	"mp_free_armor":                              "Determines whether armor and helmet are given automatically.",
	"mp_freezetime":                              "how many seconds to keep players frozen when the round starts",
	"mp_friendlyfire":                            "Allows team members to injure other members of their team",
	"mp_ggprogressive_round_restart_delay":       "Number of seconds to delay before restarting a round after a win in gungame progessive",
	"mp_ggtr_bomb_defuse_bonus":                  "Number of bonus upgrades to award the CTs when they defuse a gun game bomb",
	"mp_ggtr_bomb_detonation_bonus":              "Number of bonus upgrades to award the Ts when they detonate a gun game bomb",
	"mp_ggtr_bomb_pts_for_flash":                 "Kill points required in a round to get a bonus flash grenade",
	"mp_ggtr_bomb_pts_for_he":                    "Kill points required in a round to get a bonus HE grenade",
	"mp_ggtr_bomb_pts_for_molotov":               "Kill points required in a round to get a bonus molotov cocktail",
	"mp_ggtr_bomb_pts_for_upgrade":               "Kill points required to upgrade a player's weapon",
	"mp_ggtr_bomb_respawn_delay":                 "Number of seconds to delay before making the bomb available to a respawner in gun game",
	"mp_ggtr_end_round_kill_bonus":               "Number of bonus points awarded in Demolition Mode when knife kill ends round",
	"mp_ggtr_halftime_delay":                     "Number of seconds to delay during TR Mode halftime",
	"mp_ggtr_last_weapon_kill_ends_half":         "End the half and give a team round point when a player makes a kill using the final weapon",
	"mp_halftime":                                "Determines whether the match switches sides in a halftime event.",
	"mp_halftime_duration":                       "Number of seconds that halftime lasts",
	"mp_halftime_pausetimer":                     "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.",
	"mp_humanteam":                               "Restricts human players to a single team {any, CT, T}",
	"mp_ignore_round_win_conditions":             "Ignore conditions which would end the current round",
	"mp_join_grace_time":                         "Number of seconds after round start to allow a player to join a game",
	"mp_limitteams":                              "Max # of players 1 team can have over another (0 disables check)",
	"mp_logdetail":                               "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)",
	"mp_match_can_clinch":                        "Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?",
	"mp_match_end_changelevel":                   "At the end of the match, perform a changelevel even if next map is the same",
	"mp_match_end_restart":                       "At the end of the match, perform a restart instead of loading a new map",
	"mp_match_restart_delay":                     "Time (in seconds) until a match restarts.",
	"mp_maxmoney":                                "maximum amount of money allowed in a player's account",
	"mp_maxrounds":                               "max number of rounds to play before server changes maps",
	"mp_molotovusedelay":                         "Number of seconds to delay before the molotov can be used after acquiring it",
	"mp_playercashawards":                        "Players can earn money by performing in-game actions",
	"mp_playerid":                                "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names",
	"mp_playerid_delay":                          "Number of seconds to delay showing information in the status bar",
	"mp_playerid_hold":                           "Number of seconds to keep showing old information in the status bar",
	"mp_randomspawn":                             "Determines whether to ignore the map spawns and spawn randomly.",
	"mp_randomspawn_los":                         "If using mp_randomspawn, determines whether to test Line of Sight when spawning.",
	"mp_respawn_immunitytime":                    "How many seconds after respawn immunity lasts.",
	"mp_respawn_on_death_ct":                     "When set to 1, counter-terrorists will respawn after dying.",
	"mp_respawn_on_death_t":                      "When set to 1, terrorists will respawn after dying.",
	"mp_restartgame":                             "If non-zero, game will restart in the specified number of seconds",
	"mp_round_restart_delay":                     "Number of seconds to delay before restarting a round after a win",
	"mp_roundtime":                               "How many minutes each round takes.",
	"mp_solid_teammates":                         "Determines whether teammates are solid or not.",
	"mp_spawnprotectiontime":                     "Kick players who team-kill within this many seconds of a round restart.",
	"mp_spec_swapplayersides":                    "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.",
	"mp_spectators_max":                          "How many spectators are allowed in a match.",
	"mp_startmoney":                              "amount of money each player gets when they reset",
	"mp_td_dmgtokick":                            "The damage threshhold players have to exceed in a match to get kicked.",
	"mp_td_dmgtowarn":                            "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.",
	"mp_td_spawndmgthreshold":                    "The damage threshold players have to exceed at the start of the round to be warned/kick.",
	"mp_teamcashawards":                          "Teams can earn money by performing in-game actions",
	"mp_teamflag_1":                              "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.",
	"mp_teamflag_2":                              "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.",
	"mp_teamname_1":                              "A non-empty string overrides the first team's name.",
	"mp_teamname_2":                              "A non-empty string overrides the second team's name.",
	"mp_timelimit":                               "game time per map in minutes",
	"mp_tkpunish":                                "Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}",
	"mp_warmup_pausetimer":                       "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.",
	"mp_warmuptime":                              "How long the warmup period lasts. Changing this value resets warmup.",
	"mp_weapons_allow_randomize":                 "Set >0 to allow X random weapons from each category.",
	"mp_weapons_allow_zeus":                      "Determines whether the Zeus is purchasable or not.",
	"mp_win_panel_display_time":                  "The amount of time to show the win panel between matches / halfs",
	"name":                                          "Current user name",
	"nav_area_bgcolor":                              "RGBA color to draw as the background color for nav areas while editing.",
	"nav_area_max_size":                             "Max area size created in nav generation",
	"nav_coplanar_slope_limit":                      "",
	"nav_coplanar_slope_limit_displacement":         "",
	"nav_corner_adjust_adjacent":                    "radius used to raise/lower corners in nearby areas when raising/lowering corners.",
	"nav_create_area_at_feet":                       "Anchor nav_begin_area Z to editing player's feet",
	"nav_create_place_on_ground":                    "If true, nav areas will be placed flush with the ground when created by hand.",
	"nav_debug_blocked":                             "",
	"nav_displacement_test":                         "Checks for nodes embedded in displacements (useful for in-development maps)",
	"nav_draw_limit":                                "The maximum number of areas to draw in edit mode",
	"nav_edit":                                      "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.",
	"nav_generate_fencetops":                        "Autogenerate nav areas on fence and obstacle tops",
	"nav_generate_fixup_jump_areas":                 "Convert obsolete jump areas into 2-way connections",
	"nav_generate_incremental_range":                "",
	"nav_generate_incremental_tolerance":            "Z tolerance for adding new nav areas.",
	"nav_max_view_distance":                         "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)",
	"nav_max_vis_delta_list_length":                 "",
	"nav_potentially_visible_dot_tolerance":         "",
	"nav_quicksave":                                 "Set to one to skip the time consuming phases of the analysis.  Useful for data collection and testing.",
	"nav_selected_set_border_color":                 "Color used to draw the selected set borders while editing.",
	"nav_selected_set_color":                        "Color used to draw the selected set background while editing.",
	"nav_show_approach_points":                      "Show Approach Points in the Navigation Mesh.",
	"nav_show_area_info":                            "Duration in seconds to show nav area ID and attributes while editing",
	"nav_show_compass":                              "",
	"nav_show_continguous":                          "Highlight non-contiguous connections",
	"nav_show_danger":                               "Show current 'danger' levels.",
	"nav_show_light_intensity":                      "",
	"nav_show_node_grid":                            "",
	"nav_show_node_id":                              "",
	"nav_show_nodes":                                "",
	"nav_show_player_counts":                        "Show current player counts in each area.",
	"nav_show_potentially_visible":                  "Show areas that are potentially visible from the current nav area",
	"nav_slope_limit":                               "The ground unit normal's Z component must be greater than this for nav areas to be generated.",
	"nav_slope_tolerance":                           "The ground unit normal's Z component must be this close to the nav area's Z component to be generated.",
	"nav_snap_to_grid":                              "Snap to the nav generation grid when creating new nav areas",
	"nav_solid_props":                               "Make props solid to nav generation/editing",
	"nav_split_place_on_ground":                     "If true, nav areas will be placed flush with the ground when split.",
	"nav_test_node":                                 "",
	"nav_test_node_crouch":                          "",
	"nav_test_node_crouch_dir":                      "",
	"nav_update_visibility_on_edit":                 "If nonzero editing the mesh will incrementally recompue visibility",
	"net_allow_multicast":                           "",
	"net_blockmsg":                                  "Discards incoming message: <0|1|name>",
	"net_droppackets":                               "Drops next n packets on client",
	"net_earliertempents":                           "",
	"net_fakejitter":                                "Jitter fakelag packet time",
	"net_fakelag":                                   "Lag all incoming network data (including loopback) by this many milliseconds.",
	"net_fakeloss":                                  "Simulate packet loss as a percentage (negative means drop 1/n packets)",
	"net_maxroutable":                               "Requested max packet size before packets are 'split'.",
	"net_public_adr":                                "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: (\"x.x.x.x\" )",
	"net_showreliablesounds":                        "",
	"net_showsplits":                                "Show info about packet splits",
	"net_showudp":                                   "Dump UDP packets summary to console",
	"net_showudp_oob":                               "Dump OOB UDP packets summary to console",
	"net_showudp_remoteonly":                        "Dump non-loopback udp only",
	"net_splitpacket_maxrate":                       "Max bytes per second when queueing splitpacket chunks",
	"net_splitrate":                                 "Number of fragments for a splitpacket that can be sent per frame",
	"net_steamcnx_allowrelay":                       "Allow steam connections to attempt to use relay servers as fallback (best if specified on command line:  +net_steamcnx_allowrelay 1)",
	"net_steamcnx_enabled":                          "Use steam connections on listen server as a fallback, 2 forces use of steam connections instead of raw UDP.",
	"next":                                          "Set to 1 to advance to next frame ( when singlestep == 1 )",
	"nextlevel":                                     "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round",
	"noclip_fixup":                                  "",
	"npc_ally_deathmessage":                         "",
	"npc_height_adjust":                             "Enable test mode for ik height adjustment",
	"paintsplat_bias":                               "Change bias value for computing circle buffer",
	"paintsplat_max_alpha_noise":                    "Max noise value of circle alpha",
	"paintsplat_noise_enabled":                      "",
	"panel_test_title_safe":                         "Test vgui panel positioning with title safe indentation",
	"particle_test_attach_attachment":               "Attachment index for attachment mode",
	"particle_test_attach_mode":                     "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'",
	"particle_test_file":                            "Name of the particle system to dynamically spawn",
	"password":                                      "Current server access password",
	"phys_debug_check_contacts":                     "",
	"phys_show_active":                              "",
	"player_debug_print_damage":                     "When true, print amount and type of all damage received by player to console.",
	"post_jump_crouch":                              "This determines how long the third person player character will crouch for after landing a jump.  This only affects the third person animation visuals.",
	"r_AirboatViewDampenDamp":                       "",
	"r_AirboatViewDampenFreq":                       "",
	"r_AirboatViewZHeight":                          "",
	"r_ClipAreaFrustums":                            "",
	"r_ClipAreaPortals":                             "",
	"r_DispBuildable":                               "",
	"r_DispWalkable":                                "",
	"r_DrawBeams":                                   "0=Off, 1=Normal, 2=Wireframe",
	"r_DrawDisp":                                    "Toggles rendering of displacment maps",
	"r_DrawModelLightOrigin":                        "",
	"r_DrawPortals":                                 "",
	"r_JeepFOV":                                     "",
	"r_JeepViewDampenDamp":                          "",
	"r_JeepViewDampenFreq":                          "",
	"r_JeepViewZHeight":                             "",
	"r_VehicleViewDampen":                           "",
	"r_ambientfraction":                             "Fraction of direct lighting used to boost lighting when model requests",
	"r_ambientlightingonly":                         "Set this to 1 to light models with only ambient lighting (and no static lighting).",
	"r_avglight":                                    "",
	"r_avglightmap":                                 "",
	"r_brush_queue_mode":                            "",
	"r_colorstaticprops":                            "",
	"r_debugrandomstaticlighting":                   "Set to 1 to randomize static lighting for debugging.  Must restart for change to take affect.",
	"r_dlightsenable":                               "",
	"r_drawbrushmodels":                             "Render brush models. 0=Off, 1=Normal, 2=Wireframe",
	"r_drawclipbrushes":                             "Draw clip brushes (red=NPC+player, pink=player, purple=NPC)",
	"r_drawdecals":                                  "Render decals.",
	"r_drawentities":                                "",
	"r_drawfuncdetail":                              "Render func_detail",
	"r_drawleaf":                                    "Draw the specified leaf.",
	"r_drawlightcache":                              "0: off 1: draw light cache entries 2: draw rays",
	"r_drawlightinfo":                               "",
	"r_drawlights":                                  "",
	"r_drawmodelstatsoverlay":                       "",
	"r_drawmodelstatsoverlaydistance":               "",
	"r_drawmodelstatsoverlayfilter":                 "",
	"r_drawmodelstatsoverlaymax":                    "time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2",
	"r_drawmodelstatsoverlaymin":                    "time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2",
	"r_drawskybox":                                  "",
	"r_drawstaticprops":                             "0=Off, 1=Normal, 2=Wireframe",
	"r_drawtranslucentworld":                        "",
	"r_drawvgui":                                    "Enable the rendering of vgui panels",
	"r_drawworld":                                   "Render the world.",
	"r_dscale_basefov":                              "",
	"r_dscale_fardist":                              "",
	"r_dscale_farscale":                             "",
	"r_dscale_neardist":                             "",
	"r_dscale_nearscale":                            "",
	"r_dynamic":                                     "",
	"r_dynamiclighting":                             "",
	"r_eyemove":                                     "",
	"r_eyeshift_x":                                  "",
	"r_eyeshift_y":                                  "",
	"r_eyeshift_z":                                  "",
	"r_eyesize":                                     "",
	"r_flashlightbrightness":                        "",
	"r_flashlightclip":                              "",
	"r_flashlightdrawclip":                          "",
	"r_hwmorph":                                     "",
	"r_itemblinkmax":                                "",
	"r_itemblinkrate":                               "",
	"r_lightcache_numambientsamples":                "number of random directions to fire rays when computing ambient lighting",
	"r_lightcache_radiusfactor":                     "Allow lights to influence lightcaches beyond the lights' radii",
	"r_lightcachecenter":                            "",
	"r_lightcachemodel":                             "",
	"r_lightinterp":                                 "Controls the speed of light interpolation, 0 turns off interpolation",
	"r_lightmap":                                    "",
	"r_lightstyle":                                  "",
	"r_lightwarpidentity":                           "",
	"r_lockpvs":                                     "Lock the PVS so you can fly around and inspect what is being drawn.",
	"r_modelAmbientMin":                             "Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).",
	"r_modelwireframedecal":                         "",
	"r_nohw":                                        "",
	"r_nosw":                                        "",
	"r_novis":                                       "Turn off the PVS.",
	"r_occlusionspew":                               "Activate/deactivates spew about what the occlusion system is doing.",
	"r_oldlightselection":                           "Set this to revert to HL2's method of selecting lights",
	"r_partition_level":                             "Displays a particular level of the spatial partition system. Use -1 to disable it.",
	"r_portalsopenall":                              "Open all portals",
	"r_proplightingpooling":                         "0 - off, 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset)",
	"r_radiosity":                                   "0: no radiosity 1: radiosity with ambient cube (6 samples) 2: radiosity with 162 samples 3: 162 samples for static props, 6 samples for everything else",
	"r_randomflex":                                  "",
	"r_rimlight":                                    "",
	"r_shadow_deferred":                             "Toggle deferred shadow rendering",
	"r_shadowids":                                   "",
	"r_shadows_gamecontrol":                         "",
	"r_shadowwireframe":                             "",
	"r_showenvcubemap":                              "",
	"r_showz_power":                                 "",
	"r_skin":                                        "",
	"r_slowpathwireframe":                           "",
	"r_vehicleBrakeRate":                            "",
	"r_visocclusion":                                "Activate/deactivate wireframe rendering of what the occlusion system is doing.",
	"r_visualizelighttraces":                        "",
	"r_visualizelighttracesshowfulltrace":           "",
	"r_visualizetraces":                             "",
	"radarvisdistance":                              "at this distance and beyond you need to be point right at someone to see them",
	"radarvismaxdot":                                "how closely you have to point at someone to see them beyond max distance",
	"radarvismethod":                                "0 for traditional method, 1 for more realistic method",
	"radarvispow":                                   "the degree to which you can point away from a target, and still see them on radar.",
	"rate":                                          "Max bytes/sec the host can receive data",
	"rcon_address":                                  "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)",
	"rcon_password":                                 "remote console password.",
	"rope_min_pixel_diameter":                       "",
	"rr_followup_maxdist":                           "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.",
	"rr_remarkable_max_distance":                    "AIs will not even consider remarkarbles that are more than this many units away.",
	"rr_remarkable_world_entities_replay_limit":     "TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable",
	"rr_remarkables_enabled":                        "If 1, polling for info_remarkables and issuances of TLK_REMARK is enabled.",
	"rr_thenany_score_slop":                         "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.",
	"safezonex":                                     "The percentage of the screen width that is considered safe from overscan",
	"safezoney":                                     "The percentage of the screen height that is considered safe from overscan",
	"scene_showfaceto":                              "When playing back, show the directions of faceto events.",
	"scene_showlook":                                "When playing back, show the directions of look events.",
	"scene_showmoveto":                              "When moving, show the end location.",
	"scene_showunlock":                              "Show when a vcd is playing but normal AI is running.",
	"servercfgfile":                                 "",
	"sf_ui_tint":                                    "The current tint applied to the Scaleform UI",
	"showbudget_texture":                            "Enable the texture budget panel.",
	"showtriggers":                                  "Shows trigger brushes",
	"singlestep":                                    "Run engine in single step mode ( set next to 1 to advance a frame )",
	"sk_autoaim_mode":                               "",
	"skill":                                         "Game skill level (1-3).",
	"sm_basepath":                                   "SourceMod base path (set via command line)",
	"sm_beacon_radius":                              "Sets the radius for beacon's light rings.",
	"sm_burn_duration":                              "Sets the default duration of sm_burn and firebomb victims.",
	"sm_chat_mode":                                  "Allows player's to send messages to admin chat.",
	"sm_corecfgfile":                                "SourceMod core configuration file",
	"sm_datetime_format":                            "Default formatting time rules",
	"sm_deadtalk":                                   "Controls how dead communicate. 0 - Off. 1 - Dead players ignore teams. 2 - Dead players talk to living teammates.",
	"sm_firebomb_mode":                              "Who is targetted by the FireBomb? 0 = Target only, 1 = Target's team, 2 = Everyone",
	"sm_firebomb_radius":                            "Sets the bomb blast radius.",
	"sm_firebomb_ticks":                             "Sets how long the FireBomb fuse is.",
	"sm_flood_time":                                 "Amount of time allowed between chat messages",
	"sm_freeze_duration":                            "Sets the default duration for sm_freeze and freezebomb victims",
	"sm_freezebomb_mode":                            "Who is targetted by the freezebomb? 0 = Target only, 1 = Target's team, 2 = Everyone",
	"sm_freezebomb_radius":                          "Sets the freezebomb blast radius.",
	"sm_freezebomb_ticks":                           "Sets how long the freezebomb fuse is.",
	"sm_hide_slots":                                 "If set to 1, reserved slots will hidden (subtracted from the max slot count)",
	"sm_immunity_mode":                              "Mode for deciding immunity protection",
	"sm_menu_sounds":                                "Sets whether SourceMod menus play trigger sounds",
	"sm_nextmap":                                    "",
	"sm_reserve_kicktype":                           "How to select a client to kick (if appropriate)",
	"sm_reserve_maxadmins":                          "Maximum amount of admins to let in the server with reserve type 2",
	"sm_reserve_type":                               "Method of reserving slots",
	"sm_reserved_slots":                             "Number of reserved player slots",
	"sm_show_activity":                              "Activity display setting (see sourcemod.cfg)",
	"sm_time_adjustment":                            "Adjusts the server time in seconds",
	"sm_timebomb_mode":                              "Who is killed by the timebomb? 0 = Target only, 1 = Target's team, 2 = Everyone",
	"sm_timebomb_radius":                            "Sets the bomb blast radius.",
	"sm_timebomb_ticks":                             "Sets how long the timebomb fuse is.",
	"sm_timeleft_interval":                          "Display timeleft every x seconds. Default 0.",
	"sm_trigger_show":                               "Display triggers message to all players? (0 off, 1 on, def. 1)",
	"sm_vote_alltalk":                               "percent required for successful alltalk vote.",
	"sm_vote_ban":                                   "percent required for successful ban vote.",
	"sm_vote_burn":                                  "percent required for successful burn vote.",
	"sm_vote_delay":                                 "Sets the recommended time in between public votes",
	"sm_vote_ff":                                    "percent required for successful friendly fire vote.",
	"sm_vote_gravity":                               "percent required for successful gravity vote.",
	"sm_vote_kick":                                  "percent required for successful kick vote.",
	"sm_vote_map":                                   "percent required for successful map vote.",
	"sm_vote_progress_chat":                         "Show current vote progress as chat messages",
	"sm_vote_progress_client_console":               "Show current vote progress as console messages to clients",
	"sm_vote_progress_console":                      "Show current vote progress as console messages",
	"sm_vote_progress_hintbox":                      "Show current vote progress in a hint box",
	"sm_vote_slay":                                  "percent required for successful slay vote.",
	"snd_debug_panlaw":                              "Visualize panning crossfade curves",
	"snd_disable_mixer_duck":                        "",
	"snd_disable_mixer_solo":                        "",
	"snd_duckerattacktime":                          "",
	"snd_duckerreleasetime":                         "",
	"snd_duckerthreshold":                           "",
	"snd_ducking_off":                               "",
	"snd_ducktovolume":                              "",
	"snd_dvar_dist_max":                             "Play full 'far' sound at this distance",
	"snd_dvar_dist_min":                             "Play full 'near' sound at this distance",
	"snd_filter":                                    "",
	"snd_foliage_db_loss":                           "foliage dB loss per 1200 units",
	"snd_gain":                                      "",
	"snd_gain_max":                                  "",
	"snd_gain_min":                                  "",
	"snd_legacy_surround":                           "",
	"snd_list":                                      "",
	"snd_max_same_sounds":                           "",
	"snd_max_same_weapon_sounds":                    "",
	"snd_mixahead":                                  "",
	"snd_mixer_master_dsp":                          "",
	"snd_mixer_master_level":                        "",
	"snd_musicvolume":                               "Music volume",
	"snd_mute_losefocus":                            "",
	"snd_obscured_gain_dB":                          "",
	"snd_op_test_convar":                            "",
	"snd_pause_all":                                 "Specifies to pause all sounds and not just voice",
	"snd_pitchquality":                              "",
	"snd_pre_gain_dist_falloff":                     "",
	"snd_prefetch_common":                           "Prefetch common sounds from directories specified in scripts/sound_prefetch.txt",
	"snd_rear_speaker_scale":                        "How much to scale rear speaker contribution to front stereo output",
	"snd_refdb":                                     "Reference dB at snd_refdist",
	"snd_refdist":                                   "Reference distance for snd_refdb",
	"snd_report_format_sound":                       "If set to 1, report all sound formats.",
	"snd_report_loop_sound":                         "If set to 1, report all sounds that just looped.",
	"snd_report_start_sound":                        "If set to 1, report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example). Use snd_showstart to see the sounds that are really played.",
	"snd_report_stop_sound":                         "If set to 1, report all sounds stopped with S_StopSound().",
	"snd_report_verbose_error":                      "If set to 1, report more error found when playing sounds.",
	"snd_show":                                      "Show sounds info",
	"snd_showclassname":                             "",
	"snd_showmixer":                                 "",
	"snd_showstart":                                 "",
	"snd_sos_list_operator_updates":                 "",
	"snd_sos_show_block_debug":                      "Spew data about the list of block entries.",
	"snd_sos_show_client_rcv":                       "",
	"snd_sos_show_operator_entry_filter":            "",
	"snd_sos_show_operator_init":                    "",
	"snd_sos_show_operator_parse":                   "",
	"snd_sos_show_operator_prestart":                "",
	"snd_sos_show_operator_shutdown":                "",
	"snd_sos_show_operator_start":                   "",
	"snd_sos_show_operator_stop_entry":              "",
	"snd_sos_show_operator_updates":                 "",
	"snd_sos_show_queuetotrack":                     "",
	"snd_sos_show_server_xmit":                      "",
	"snd_sos_show_startqueue":                       "",
	"snd_visualize":                                 "Show sounds location in world",
	"soundscape_debug":                              "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.",
	"sourcemod_version":                             "SourceMod Version",
	"spec_allow_roaming":                            "If nonzero, allow free-roaming spectator camera.",
	"spec_freeze_deathanim_time":                    "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.",
	"spec_freeze_panel_extended_time":               "Time spent with the freeze panel still up after observer freeze cam is done.",
	"spec_freeze_target_fov":                        "The target FOV that the deathcam should use.",
	"spec_freeze_target_fov_long":                   "The target FOV that the deathcam should use when the cam zoom far away on the target.",
	"spec_freeze_time":                              "Time spend frozen in observer freeze cam.",
	"spec_freeze_time_lock":                         "Time players are prevented from skipping the freeze cam",
	"spec_freeze_traveltime":                        "Time taken to zoom in to frame a target in observer freeze cam.",
	"stripper_cfg_path":                             "Stripper Config Path",
	"stripper_version":                              "Stripper Version",
	"suitvolume":                                    "",
	"sv_accelerate":                                 "",
	"sv_allow_votes":                                "Allow voting?",
	"sv_allow_wait_command":                         "Allow or disallow the wait command on clients connected to this server.",
	"sv_alltalk":                                    "Players can hear all enemy communication (voice, chat)",
	"sv_alternateticks":                             "If set, server only simulates entities on even numbered ticks.",
	"sv_arms_race_vote_to_restart_disallowed_after": "Arms Race gun level after which vote to restart is disallowed",
	"sv_cheats":                      "Allow cheats on server",
	"sv_client_cmdrate_difference":   "cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate.",
	"sv_clockcorrection_msecs":       "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount",
	"sv_competitive_minspec":         "Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.",
	"sv_competitive_official_5v5":    "Enable to force the server to show 5v5 scoreboards and allows spectators to see characters through walls.",
	"sv_consistency":                 "Whether the server enforces file consistency for critical files",
	"sv_contact":                     "Contact email for server sysop",
	"sv_damage_print_enable":         "Turn this off to disable the player's damage feed in the console after getting killed.",
	"sv_dc_friends_reqd":             "Set this to 0 to allow direct connects to a game in progress even if no presents are present",
	"sv_deadtalk":                    "Dead players can speak (voice, text) to the living",
	"sv_downloadurl":                 "Location from which clients can download missing files",
	"sv_dumpstringtables":            "",
	"sv_footstep_sound_frequency":    "How frequent to hear the player's step sound or how fast they appear to be running from first person.",
	"sv_forcepreload":                "Force server side preloading.",
	"sv_friction":                    "World friction.",
	"sv_full_alltalk":                "Any player (including Spectator team) can speak to any other player",
	"sv_gameinstructor_disable":      "Force all clients to disable their game instructors.",
	"sv_hibernate_ms":                "# of milliseconds to sleep per frame while hibernating",
	"sv_hibernate_ms_vgui":           "# of milliseconds to sleep per frame while hibernating but running the vgui dedicated server frontend",
	"sv_hibernate_postgame_delay":    "# of seconds to wait after final client leaves before hibernating.",
	"sv_hibernate_when_empty":        "Puts the server into extremely low CPU usage mode when no clients connected",
	"sv_ignoregrenaderadio":          "Turn off Fire in the hole messages",
	"sv_infinite_ammo":               "Player's active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the magazine.",
	"sv_kick_ban_duration":           "How long should a kick ban from the server should last (in minutes)",
	"sv_kick_players_with_cooldown":  "(0: do not kick; 1: kick Untrusted players; 2: kick players with any cooldown)",
	"sv_lagcompensationforcerestore": "Don't test validity of a lag comp restore, just do it.",
	"sv_lan":                                          "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )",
	"sv_log_onefile":                                  "Log server information to only one file.",
	"sv_logbans":                                      "Log server bans in the server logs.",
	"sv_logecho":                                      "Echo log information to the console.",
	"sv_logfile":                                      "Log server information in the log file.",
	"sv_logflush":                                     "Flush the log file to disk on each write (slow).",
	"sv_logsdir":                                      "Folder in the game directory where server logs will be stored.",
	"sv_maxrate":                                      "Max bandwidth rate allowed on server, 0 == unlimited",
	"sv_memlimit":                                     "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.",
	"sv_mincmdrate":                                   "This sets the minimum value for cl_cmdrate. 0 == unlimited.",
	"sv_minrate":                                      "Min bandwidth rate allowed on server, 0 == unlimited",
	"sv_minupdaterate":                                "Minimum updates per second that the server will allow",
	"sv_noclipaccelerate":                             "",
	"sv_noclipduringpause":                            "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).",
	"sv_noclipspeed":                                  "",
	"sv_password":                                     "Server password for entry into multiplayer games",
	"sv_pausable":                                     "Is the server pausable.",
	"sv_pure_consensus":                               "Minimum number of file hashes to agree to form a consensus.",
	"sv_pure_kick_clients":                            "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.",
	"sv_pure_retiretime":                              "Seconds of server idle time to flush the sv_pure file hash cache.",
	"sv_pure_trace":                                   "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.",
	"sv_pushaway_hostage_force":                       "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).",
	"sv_pushaway_max_hostage_force":                   "Maximum of how hard the hostage is pushed away from physics objects.",
	"sv_pvsskipanimation":                             "Skips SetupBones when npc's are outside the PVS",
	"sv_regeneration_force_on":                        "Cheat to test regenerative health systems",
	"sv_region":                                       "The region of the world to report this server in.",
	"sv_reservation_tickrate_adjustment":              "Adjust server tickrate upon reservation",
	"sv_reservation_timeout":                          "Time in seconds before lobby reservation expires.",
	"sv_search_key":                                   "When searching for a dedicated server from lobby, restrict search to only dedicated servers having the same sv_search_key.",
	"sv_showimpacts":                                  "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)",
	"sv_showlagcompensation":                          "Show lag compensated hitboxes whenever a player is lag compensated.",
	"sv_skyname":                                      "Current name of the skybox texture",
	"sv_spec_hear":                                    "Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team",
	"sv_specaccelerate":                               "",
	"sv_specnoclip":                                   "",
	"sv_specspeed":                                    "",
	"sv_staminajumpcost":                              "Stamina penalty for jumping",
	"sv_staminalandcost":                              "Stamina penalty for landing",
	"sv_staminamax":                                   "Maximum stamina penalty",
	"sv_staminarecoveryrate":                          "Rate at which stamina recovers (units/sec)",
	"sv_steamgroup":                                   "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.",
	"sv_steamgroup_exclusive":                         "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.",
	"sv_stopspeed":                                    "Minimum stopping speed when on ground.",
	"sv_tags":                                         "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.",
	"sv_unlockedchapters":                             "Highest unlocked game chapter.",
	"sv_visiblemaxplayers":                            "Overrides the max players reported to prospective clients",
	"sv_voiceenable":                                  "",
	"sv_vote_allow_spectators":                        "Allow spectators to vote?",
	"sv_vote_command_delay":                           "How long after a vote passes until the action happens",
	"sv_vote_creation_timer":                          "How often someone can individually call a vote.",
	"sv_vote_failure_timer":                           "A vote that fails cannot be re-submitted for this long",
	"sv_vote_quorum_ratio":                            "The minimum ratio of players needed to vote on an issue to resolve it.",
	"sv_vote_timer_duration":                          "How long to allow voting on an issue",
	"sys_minidumpspewlines":                           "Lines of crash dump console spew to keep.",
	"texture_budget_background_alpha":                 "how translucent the budget panel is",
	"texture_budget_panel_bottom_of_history_fraction": "number between 0 and 1",
	"texture_budget_panel_height":                     "height in pixels of the budget panel",
	"texture_budget_panel_width":                      "width in pixels of the budget panel",
	"texture_budget_panel_x":                          "number of pixels from the left side of the game screen to draw the budget panel",
	"texture_budget_panel_y":                          "number of pixels from the top side of the game screen to draw the budget panel",
	"think_limit":                                     "Maximum think time in milliseconds, warning is printed if this is exceeded.",
	"tv_allow_camera_man":                             "Auto director allows spectators to become camera man",
	"tv_allow_static_shots":                           "Auto director uses fixed level cameras for shots",
	"tv_autorecord":                                   "Automatically records all games as GOTV demos.",
	"tv_autoretry":                                    "Relay proxies retry connection after network timeout",
	"tv_chatgroupsize":                                "Set the default chat group size",
	"tv_chattimelimit":                                "Limits spectators to chat only every n seconds",
	"tv_debug":                                        "GOTV debug info.",
	"tv_delay":                                        "GOTV broadcast delay in seconds",
	"tv_delaymapchange":                               "Delays map change until broadcast is complete",
	"tv_deltacache":                                   "Enable delta entity bit stream cache",
	"tv_dispatchmode":                                 "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always",
	"tv_enable":                                       "Activates GOTV on server.",
	"tv_maxclients":                                   "Maximum client number on GOTV server.",
	"tv_maxrate":                                      "Max GOTV spectator bandwidth rate allowed, 0 == unlimited",
	"tv_name":                                         "GOTV host name",
	"tv_nochat":                                       "Don't receive chat messages from other GOTV spectators",
	"tv_overridemaster":                               "Overrides the GOTV master root address.",
	"tv_password":                                     "GOTV password for all clients",
	"tv_port":                                         "Host GOTV port",
	"tv_relaypassword":                                "GOTV password for relay proxies",
	"tv_relayvoice":                                   "Relay voice data: 0=off, 1=on",
	"tv_snapshotrate":                                 "Snapshots broadcasted per second",
	"tv_timeout":                                      "GOTV connection timeout in seconds.",
	"tv_title":                                        "Set title for GOTV spectator UI",
	"tv_transmitall":                                  "Transmit all entities (not only director view)",
	"vgui_drawtree":                                   "Draws the vgui panel hiearchy to the specified depth level.",
	"view_punch_decay":                                "Decay factor exponent for view punch",
	"view_recoil_tracking":                            "How closely the view tracks with the aim punch from weapon recoil",
	"vis_force":                                       "",
	"vismon_poll_frequency":                           "",
	"vismon_trace_limit":                              "",
	"voice_enable":                                    "Toggle voice transmit and receive.",
	"voice_forcemicrecord":                            "",
	"voice_inputfromfile":                             "Get voice input from 'voice_input.wav' rather than from the microphone.",
	"voice_loopback":                                  "",
	"voice_mixer_boost":                               "",
	"voice_mixer_mute":                                "",
	"voice_mixer_volume":                              "",
	"voice_player_speaking_delay_threshold":           "",
	"voice_recordtofile":                              "Record mic data and decompressed voice data into 'voice_micdata.wav' and 'voice_decompressed.wav'",
	"voice_scale":                                     "",
	"voice_threshold":                                 "",
	"volume":                                          "Sound volume",
	"vprof_graphheight":                               "",
	"vprof_graphwidth":                                "",
	"vprof_unaccounted_limit":                         "number of milliseconds that a node must exceed to turn red in the vprof panel",
	"vprof_verbose":                                   "Set to one to show average and peak times",
	"vprof_warningmsec":                               "Above this many milliseconds render the label red to indicate slow code.",
	"weapon_accuracy_nospread":                        "Disable weapon inaccuracy spread",
	"weapon_recoil_cooldown":                          "Amount of time needed between shots before restarting recoil",
	"weapon_recoil_decay1_exp":                        "Decay factor exponent for weapon recoil",
	"weapon_recoil_decay2_exp":                        "Decay factor exponent for weapon recoil",
	"weapon_recoil_decay2_lin":                        "Decay factor (linear term) for weapon recoil",
	"weapon_recoil_scale":                             "Overall scale factor for recoil. Used to reduce recoil on specific platforms",
	"weapon_recoil_scale_motion_controller":           "Overall scale factor for recoil. Used to reduce recoil.  Only for motion controllers",
	"weapon_recoil_suppression_factor":                "Initial recoil suppression factor (first suppressed shot will use this factor * standard recoil, lerping to 1 for later shots",
	"weapon_recoil_suppression_shots":                 "Number of shots before weapon uses full recoil",
	"weapon_recoil_variance":                          "Amount of variance per recoil impulse",
	"weapon_recoil_vel_decay":                         "Decay factor for weapon recoil velocity",
	"weapon_recoil_view_punch_extra":                  "Additional (non-aim) punch added to view from recoil",
	"windows_speaker_config":                          "",
	"xbox_autothrottle":                               "",
	"xbox_throttlebias":                               "",
	"xbox_throttlespoof":                              "",
	"BlendBonesMode":                                  "",
	"PhysPMC":                                         "",
	"adsp_alley_min":                                  "",
	"adsp_courtyard_min":                              "",
	"adsp_door_height":                                "",
	"adsp_duct_min":                                   "",
	"adsp_hall_min":                                   "",
	"adsp_low_ceiling":                                "",
	"adsp_opencourtyard_min":                          "",
	"adsp_openspace_min":                              "",
	"adsp_openstreet_min":                             "",
	"adsp_openwall_min":                               "",
	"adsp_room_min":                                   "",
	"adsp_scale_delay_feedback":                       "",
	"adsp_scale_delay_gain":                           "",
	"adsp_street_min":                                 "",
	"adsp_tunnel_min":                                 "",
	"adsp_wall_height":                                "",
	"ai_LOS_mode":                                     "",
	"ai_auto_contact_solver":                          "",
	"ai_block_damage":                                 "",
	"ai_debug_assault":                                "",
	"ai_debug_avoidancebounds":                        "",
	"ai_debug_directnavprobe":                         "",
	"ai_debug_doors":                                  "",
	"ai_debug_dyninteractions":                        "Debug the NPC dynamic interaction system.",
	"ai_debug_efficiency":                             "",
	"ai_debug_enemies":                                "",
	"ai_debug_expressions":                            "Show random expression decisions for NPCs.",
	"ai_debug_follow":                                 "",
	"ai_debug_loners":                                 "",
	"ai_debug_looktargets":                            "",
	"ai_debug_nav":                                    "",
	"ai_debug_ragdoll_magnets":                        "",
	"ai_debug_speech":                                 "",
	"ai_debug_squads":                                 "",
	"ai_debug_think_ticks":                            "",
	"ai_debugscriptconditions":                        "",
	"ai_default_efficient":                            "",
	"ai_efficiency_override":                          "",
	"ai_enable_fear_behavior":                         "",
	"ai_expression_frametime":                         "Maximum frametime to still play background expressions.",
	"ai_expression_optimization":                      "Disable npc background expressions when you can't see them.",
	"ai_fear_player_dist":                             "",
	"ai_find_lateral_cover":                           "",
	"ai_find_lateral_los":                             "",
	"ai_follow_use_points":                            "",
	"ai_follow_use_points_when_moving":                "",
	"ai_force_serverside_ragdoll":                     "",
	"ai_frametime_limit":                              "frametime limit for min efficiency AIE_NORMAL (in sec's).",
	"ai_lead_time":                                    "",
	"ai_moveprobe_debug":                              "",
	"ai_moveprobe_jump_debug":                         "",
	"ai_moveprobe_usetracelist":                       "",
	"ai_nav_debug_experimental_pathing":               "Draw paths tried during search for bodysnatcher pathing",
	"ai_navigator_generate_spikes":                    "",
	"ai_navigator_generate_spikes_strength":           "",
	"ai_no_local_paths":                               "",
	"ai_no_node_cache":                                "",
	"ai_no_select_box":                                "",
	"ai_no_steer":                                     "",
	"ai_no_talk_delay":                                "",
	"ai_norebuildgraph":                               "",
	"ai_path_adjust_speed_on_immediate_turns":         "",
	"ai_path_insert_pause_at_est_end":                 "",
	"ai_path_insert_pause_at_obstruction":             "",
	"ai_post_frame_navigation":                        "",
	"ai_radial_max_link_dist":                         "",
	"ai_reaction_delay_alert":                         "",
	"ai_reaction_delay_idle":                          "",
	"ai_rebalance_thinks":                             "",
	"ai_sequence_debug":                               "",
	"ai_setupbones_debug":                             "Shows that bones that are setup every think",
	"ai_shot_bias":                                    "",
	"ai_shot_bias_max":                                "",
	"ai_shot_bias_min":                                "",
	"ai_shot_stats":                                   "",
	"ai_shot_stats_term":                              "",
	"ai_show_hull_attacks":                            "",
	"ai_show_think_tolerance":                         "",
	"ai_simulate_task_overtime":                       "",
	"ai_spread_cone_focus_time":                       "",
	"ai_spread_defocused_cone_multiplier":             "",
	"ai_spread_pattern_focus_time":                    "",
	"ai_strong_optimizations":                         "",
	"ai_strong_optimizations_no_checkstand":           "",
	"ai_task_pre_script":                              "",
	"ai_test_moveprobe_ignoresmall":                   "",
	"ai_use_clipped_paths":                            "",
	"ai_use_efficiency":                               "",
	"ai_use_frame_think_limits":                       "",
	"ai_use_think_optimizations":                      "",
	"ai_use_visibility_cache":                         "",
	"ammo_338mag_headshot_mult":                       "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_338mag_impulse":                             "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_357sig_headshot_mult":                       "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_357sig_impulse":                             "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_45acp_headshot_mult":                        "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_45acp_impulse":                              "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_50AE_headshot_mult":                         "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_50AE_impulse":                               "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_556mm_box_headshot_mult":                    "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_556mm_box_impulse":                          "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_556mm_headshot_mult":                        "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_556mm_impulse":                              "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_57mm_headshot_mult":                         "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_57mm_impulse":                               "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_762mm_headshot_mult":                        "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_762mm_impulse":                              "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_9mm_headshot_mult":                          "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_9mm_impulse":                                "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_buckshot_headshot_mult":                     "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"ammo_buckshot_impulse":                           "You must enable tweaking via tweak_ammo_impulses to use this value.",
	"anim_3wayblend":                                  "Toggle the 3-way animation blending code.",
	"async_allow_held_files":                          "Allow AsyncBegin/EndRead()",
	"async_mode":                                      "Set the async filesystem mode (0 = async, 1 = synchronous)",
	"async_serialize":                                 "Force async reads to serialize for profiling",
	"async_simulate_delay":                            "Simulate a delay of up to a set msec per file operation",
	"autoaim_max_deflect":                             "",
	"autoaim_max_dist":                                "",
	"autoaim_viewing_client":                          "",
	"blackbox":                                        "",
	"bot_allow_grenades":                              "If nonzero, bots may use grenades.",
	"bot_allow_machine_guns":                          "If nonzero, bots may use the machine gun.",
	"bot_allow_pistols":                               "If nonzero, bots may use pistols.",
	"bot_allow_rifles":                                "If nonzero, bots may use rifles.",
	"bot_allow_rogues":                                "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.",
	"bot_allow_shotguns":                              "If nonzero, bots may use shotguns.",
	"bot_allow_snipers":                               "If nonzero, bots may use sniper rifles.",
	"bot_allow_sub_machine_guns":                      "If nonzero, bots may use sub-machine guns.",
	"bot_auto_follow":                                 "If nonzero, bots with high co-op may automatically follow a nearby human player.",
	"bot_auto_vacate":                                 "If nonzero, bots will automatically leave to make room for human players.",
	"bot_chatter_use_rr":                              "0 = Use old bot chatter system, 1 = Use response rules",
	"bot_controllable":                                "Determines whether bots can be controlled by players",
	"bot_eco_limit":                                   "If nonzero, bots will not buy if their money falls below this amount.",
	"bot_flipout":                                     "If nonzero, bots use no CPU for AI. Instead, they run around randomly.",
	"bot_gungameselect_weapons_ct":                    "the list of weapons that CT bots start with in gun game select",
	"bot_gungameselect_weapons_t":                     "the list of weapons that T bots start with in gun game select",
	"bot_join_delay":                                  "Prevents bots from joining the server for this many seconds after a map change.",
	"bot_prefix":                                      "This string is prefixed to the name of all bots that join the game. <difficulty> will be replaced with the bot's difficulty. <weaponclass> will be replaced with the bot's desired weapon class. <skill> will be replaced with a 0-100 representation of the bot's skill.",
	"bot_profile_db":                                  "The filename from which bot profiles will be read.",
	"bot_walk":                                        "If nonzero, bots can only walk, not run.",
	"breakable_disable_gib_limit":                     "",
	"breakable_multiplayer":                           "",
	"bugreporter_console_bytes":                       "Max # of console bytes to put into bug report body (full text still attached).",
	"bugreporter_includebsp":                          "Include .bsp for internal bug submissions.",
	"bugreporter_snapshot_delay":                      "Frames to delay before taking snapshot",
	"cc_norepeat":                                     "In multiplayer games, don't repeat captions more often than this many seconds.",
	"cc_showmissing":                                  "Show missing closecaption entries.",
	"choreo_spew_filter":                              "Spew choreo. Use a sub-string or * to display all events.",
	"cl_cloud_settings":                               "Cloud enabled from (from HKCU\\Software\\Valve\\Steam\\Apps\appid\\Cloud)",
	"cl_configversion":                                "Configuration layout version. Bump this to force a reset of the PS3 save game / settings.",
	"cl_connection_trouble_timeout":                   "How long until we timeout on our network connection because of connectivity loss (-1 if no problem)",
	"cl_csm_auto_entity":                              "",
	"cl_failremoteconnections":                        "Force connection attempts to time out",
	"cl_interpolate":                                  "Interpolate entities on the client.",
	"cl_localnetworkbackdoor":                         "Enable network optimizations for single player games.",
	"cl_playback_screenshots":                         "Allows the client to playback screenshot and jpeg commands in demos.",
	"cl_retire_low_priority_lights":                   "Low priority dlights are replaced by high priority ones",
	"cl_savescreenshotstosteam":                       "Saves screenshots to the Steam's screenshot library",
	"cl_screenshotlocation":                           "Location to tag the screenshot with",
	"cl_screenshotname":                               "Custom Screenshot name",
	"cl_screenshotusertag":                            "User to tag in the screenshot",
	"cl_showdemooverlay":                              "How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)",
	"cl_simdbones":                                    "Use SIMD bone setup.",
	"cl_teamid_max":                                   "",
	"cl_teamid_min":                                   "",
	"cl_titledataversionblock1":                       "stats for console title data block1 i/o version.",
	"cl_titledataversionblock2":                       "stats for console title data block2 i/o version.",
	"cl_titledataversionblock3":                       "stats for console title data block3 i/o version.",
	"cl_use_simd_bones":                               "1 use SIMD bones 0 use scalar bones.",
	"cl_voice_filter":                                 "Filter voice by name substring",
	"collision_shake_amp":                             "",
	"collision_shake_freq":                            "",
	"collision_shake_time":                            "",
	"commentary":                                      "Desired commentary mode state.",
	"commentary_available":                            "Automatically set by the game when a commentary file is available for the current map.",
	"con_drawnotify":                                  "Disables drawing of notification area (for taking screenshots).",
	"con_notifytime":                                  "How long to display recent console text to the upper part of the game window",
	"con_nprint_bgalpha":                              "Con_NPrint background alpha.",
	"con_nprint_bgborder":                             "Con_NPrint border size.",
	"con_timestamp":                                   "Prefix console.log entries with timestamps",
	"con_trace":                                       "Print console text to low level printout.",
	"console_window_open":                             "Is the console window active",
	"contimes":                                        "Number of console lines to overlay for debugging.",
	"contributionscore_assist":                        "amount of contribution score added for an assist",
	"contributionscore_bomb_defuse":                   "amount of contribution score for defusing a bomb",
	"contributionscore_bomb_planted":                  "amount of contribution score for planting a bomb",
	"contributionscore_hostage_kill":                  "amount of contribution score for killing a hostage, normally negative",
	"contributionscore_hostage_rescue":                "amount of contribution score added per hostage rescued",
	"contributionscore_kill":                          "amount of contribution score added for a kill",
	"contributionscore_objective_kill":                "amount of contribution score added for an objective related kill",
	"contributionscore_suicide":                       "amount of contribution score for a suicide, normally negative",
	"contributionscore_team_kill":                     "amount of contribution score for a team kill, normally negative",
	"coop":                                                   "Cooperative play.",
	"cpu_level":                                              "CPU Level - Default: High",
	"cs_AssistDamageThreshold":                               "cs_AssistDamageThreshold defines the amount of damage needed to score an assist",
	"csm_quality_level":                                      "Cascaded shadow map quality level, [0,3], 0=VERY_LOW, 3=HIGHEST",
	"das_max_z_trace_length":                                 "Maximum height of player and still test for adsp",
	"das_process_overhang_spaces":                            "",
	"datacachesize":                                          "Size in MB.",
	"dbg_demofile":                                           "",
	"deathmatch":                                             "Running a deathmatch server.",
	"debug_aim_angle":                                        "",
	"debug_map_crc":                                          "Prints CRC for each map lump loaded",
	"debug_materialmodifycontrol":                            "",
	"debug_overlay_fullposition":                             "",
	"debug_paint_alpha":                                      "",
	"debug_physimpact":                                       "",
	"debug_touchlinks":                                       "Spew touch link activity",
	"decalfrequency":                                         "",
	"demo_avellimit":                                         "Angular velocity limit before eyes considered snapped for demo playback.",
	"demo_debug":                                             "Demo debug info.",
	"demo_enabledemos":                                       "Enable recording demos (must be set true before loading a map)",
	"demo_fastforwardfinalspeed":                             "Go this fast when starting to hold FF button.",
	"demo_fastforwardramptime":                               "How many seconds it takes to get to full FF speed.",
	"demo_fastforwardstartspeed":                             "Go this fast when starting to hold FF button.",
	"demo_interplimit":                                       "How much origin velocity before it's considered to have 'teleported' causing interpolation to reset.",
	"demo_interpolateview":                                   "Do view interpolation during dem playback.",
	"demo_legacy_rollback":                                   "Use legacy view interpolation rollback amount in demo playback.",
	"demo_pauseatservertick":                                 "Pauses demo playback at server tick",
	"demo_quitafterplayback":                                 "Quits game after demo playback.",
	"dev_force_selected_device":                              "",
	"dev_reportmoneychanges":                                 "Displays money account changes for players in the console",
	"dev_scaleform_debug":                                    "",
	"disp_dynamic":                                           "",
	"dispcoll_drawplane":                                     "",
	"displaysoundlist":                                       "",
	"dsp_automatic":                                          "",
	"dsp_facingaway":                                         "",
	"dsp_room":                                               "",
	"dsp_spatial":                                            "",
	"dsp_speaker":                                            "",
	"dsp_vol_2ch":                                            "",
	"dsp_vol_4ch":                                            "",
	"dsp_vol_5ch":                                            "",
	"dsp_water":                                              "",
	"dt_ShowPartialChangeEnts":                               "(SP only) - show entities that were copied using small optimized lists (FL_EDICT_PARTIAL_CHANGE).",
	"dt_UsePartialChangeEnts":                                "(SP only) - enable FL_EDICT_PARTIAL_CHANGE optimization.",
	"dtwarning":                                              "Print data table warnings?",
	"dtwatchclass":                                           "Watch all fields encoded with this table.",
	"dtwatchdecode":                                          "When watching show decode.",
	"dtwatchencode":                                          "When watching show encode.",
	"dtwatchent":                                             "Watch this entities data table encoding.",
	"dtwatchvar":                                             "Watch the named variable.",
	"ent_debugkeys":                                          "",
	"ent_show_contexts":                                      "Show entity contexts in ent_text display",
	"er_colwidth":                                            "",
	"er_graphwidthfrac":                                      "",
	"er_maxname":                                             "",
	"errorcallstacks_enable":                                 "All Error() calls will attach a callstack",
	"errorcallstacks_length":                                 "Length of automatic error callstacks",
	"fast_fogvolume":                                         "",
	"fast_poly_convert":                                      "",
	"filesystem_buffer_size":                                 "Size of per file buffers. 0 for none",
	"filesystem_max_stdio_read":                              "",
	"filesystem_native":                                      "Use native FS or STDIO",
	"filesystem_report_buffered_io":                          "",
	"filesystem_unbuffered_io":                               "",
	"filesystem_use_overlapped_io":                           "",
	"fire_absorbrate":                                        "",
	"fire_dmgbase":                                           "",
	"fire_dmginterval":                                       "",
	"fire_dmgscale":                                          "",
	"fire_extabsorb":                                         "",
	"fire_extscale":                                          "",
	"fire_growthrate":                                        "",
	"fire_heatscale":                                         "",
	"fire_incomingheatscale":                                 "",
	"fire_maxabsorb":                                         "",
	"flex_expression":                                        "",
	"flex_looktime":                                          "",
	"flex_maxawaytime":                                       "",
	"flex_maxplayertime":                                     "",
	"flex_minawaytime":                                       "",
	"flex_minplayertime":                                     "",
	"flex_talk":                                              "",
	"fog_volume_debug":                                       "If enabled, prints diagnostic information about the current fog volume",
	"fps_max_splitscreen":                                    "Frame rate limiter, splitscreen",
	"free_pass_peek_debug":                                   "",
	"fs_enable_stats":                                        "",
	"fs_monitor_read_from_pack":                              "0:Off, 1:Any, 2:Sync only",
	"fs_report_long_reads":                                   "0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threshold",
	"fs_report_sync_opens":                                   "0:Off, 1:Always, 2:Not during map load",
	"fs_report_sync_opens_callstack":                         "0 to not display the call-stack when we hit a fs_report_sync_opens warning. Set to 1 to display the call-stack.",
	"fs_warning_mode":                                        "0:Off, 1:Warn main thread, 2:Warn other threads",
	"func_break_reduction_factor":                            "",
	"func_breakdmg_bullet":                                   "",
	"func_breakdmg_club":                                     "",
	"func_breakdmg_explosive":                                "",
	"g_Language":                                             "",
	"g_ai_threadedgraphbuild":                                "If true, use experimental threaded node graph building.",
	"g_debug_doors":                                          "",
	"g_debug_npc_vehicle_roles":                              "",
	"g_debug_transitions":                                    "Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition.",
	"g_ragdoll_important_maxcount":                           "",
	"g_ragdoll_maxcount":                                     "",
	"game_online":                                            "The current game is online.",
	"game_public":                                            "The current game is public.",
	"gamestats_file_output_directory":                        "When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath",
	"gameui_xbox":                                            "",
	"gg_knife_kill_demotes":                                  "0 = knife kill in gungame has no effect on player level, 1 = knife kill demotes player by one level",
	"gpu_level":                                              "GPU Level - Default: High",
	"gpu_mem_level":                                          "Memory Level - Default: High",
	"hl2_episodic":                                           "",
	"host_ShowIPCCallCount":                                  "Print # of IPC calls this number of times per second. If set to -1, the # of IPC calls is shown every frame.",
	"host_framerate":                                         "Set to lock per-frame time elapse.",
	"host_limitlocal":                                        "Apply cl_cmdrate and cl_updaterate to loopback connection",
	"host_print_frame_times":                                 "",
	"host_profile":                                           "",
	"host_runframe_input_parcelremainder":                    "",
	"host_showcachemiss":                                     "Print a debug message when the client or server cache is missed.",
	"host_speeds":                                            "Show general system running times.",
	"host_syncfps":                                           "Synchronize real render time to host_framerate if possible.",
	"host_thread_mode":                                       "Run the host in threaded mode, (0 == off, 1 == if multicore, 2 == force)",
	"host_threaded_sound":                                    "Run the sound on a thread (independent of mix)",
	"host_threaded_sound_simplethread":                       "Run the sound on a simple thread not a jobthread",
	"hostage_feetyawrate":                                    "How many degrees per second that hostages can turn their feet or upper body.",
	"hud_jeephint_numentries":                                "",
	"inferno_max_trace_per_tick":                             "",
	"item_enable_content_streaming":                          "",
	"item_enable_dynamic_loading":                            "Enable/disable dynamic streaming of econ content.",
	"item_quality_chance_common":                             "Percentage chance that a random item is common.",
	"item_quality_chance_rare":                               "Percentage chance that a random item is a rare.",
	"item_quality_chance_unique":                             "Percentage chance that a random item is unique.",
	"joy_deadzone_mode":                                      "0 => Cross-shaped deadzone (default), 1 => Square deadzone.",
	"joy_xcontroller_found":                                  "Automatically set to 1 if an xcontroller has been detected.",
	"jpeg_quality":                                           "jpeg screenshot quality.",
	"knife_damage_scale":                                     "",
	"lservercfgfile":                                         "",
	"map_noareas":                                            "Disable area to area connection testing.",
	"map_wants_save_disable":                                 "",
	"mapcyclefile":                                           "Name of the .txt file used to cycle the maps on multiplayer servers",
	"mat_aaquality":                                          "",
	"mat_ambient_light_b":                                    "",
	"mat_ambient_light_g":                                    "",
	"mat_ambient_light_r":                                    "",
	"mat_antialias":                                          "",
	"mat_bufferprimitives":                                   "",
	"mat_bumpmap":                                            "",
	"mat_colcorrection_disableentities":                      "",
	"mat_colcorrection_editor":                               "",
	"mat_compressedtextures":                                 "",
	"mat_debugdepth":                                         "",
	"mat_debugdepthmode":                                     "",
	"mat_debugdepthval":                                      "",
	"mat_debugdepthvalmax":                                   "",
	"mat_defaultlightmap":                                    "Default brightness for lightmaps where none have been created in the level.",
	"mat_depth_blur_focal_distance_override":                 "",
	"mat_depth_blur_strength_override":                       "",
	"mat_depthfeather_enable":                                "",
	"mat_detail_tex":                                         "",
	"mat_diffuse":                                            "",
	"mat_disable_fancy_blending":                             "",
	"mat_dof_max_blur_radius":                                "",
	"mat_dof_quality":                                        "",
	"mat_drawTitleSafe":                                      "Enable title safe overlay",
	"mat_dxlevel":                                            "",
	"mat_envmapsize":                                         "",
	"mat_envmaptgasize":                                      "",
	"mat_exclude_async_update":                               "",
	"mat_excludetextures":                                    "",
	"mat_fastspecular":                                       "Enable/Disable specularity for visual testing.  Will not reload materials and will not affect perf.",
	"mat_filterlightmaps":                                    "",
	"mat_filtertextures":                                     "",
	"mat_force_vertexfog":                                    "",
	"mat_forceaniso":                                         "",
	"mat_forcehardwaresync":                                  "",
	"mat_forcemanagedtextureintohardware":                    "",
	"mat_grain_scale_override":                               "",
	"mat_hdr_level":                                          "Set to 0 for no HDR, 1 for LDR+bloom on HDR maps, and 2 for full HDR on HDR maps.",
	"mat_leafvis_draw_mask":                                  "A bitfield which affects leaf visibility debug rendering.  -1: show all, bit 0: render PVS-visible leafs, bit 1: render PVS- and frustum-visible leafs, bit 2: render frustum bounds, bit 3: render leaves out of PVS.",
	"mat_leafvis_freeze":                                     "If set to 1, uses the last known leaf visibility data for visualization.  If set to 0, updates based on camera movement.",
	"mat_leafvis_update_every_frame":                         "Updates leafvis debug render every frame (expensive)",
	"mat_levelflush":                                         "",
	"mat_lightmap_pfms":                                      "Outputs .pfm files containing lightmap data for each lightmap page when a level exits.",
	"mat_max_worldmesh_vertices":                             "",
	"mat_maxframelatency":                                    "",
	"mat_mipmaptextures":                                     "",
	"mat_monitorgamma_tv_exp":                                "",
	"mat_monitorgamma_tv_range_max":                          "",
	"mat_monitorgamma_tv_range_min":                          "",
	"mat_motion_blur_enabled":                                "",
	"mat_motion_blur_percent_of_screen_max":                  "",
	"mat_noise_enable":                                       "",
	"mat_paint_enabled":                                      "",
	"mat_parallaxmap":                                        "",
	"mat_parallaxmapsamplesmax":                              "",
	"mat_parallaxmapsamplesmin":                              "",
	"mat_phong":                                              "",
	"mat_picmip":                                             "",
	"mat_print_top_model_vert_counts":                        "Constantly print to screen the top N models as measured by total faces rendered this frame",
	"mat_processtoolvars":                                    "",
	"mat_queue_mode_force_allow":                             "Whether QMS can be enabled on single threaded CPU",
	"mat_reducefillrate":                                     "",
	"mat_reduceparticles":                                    "",
	"mat_report_queue_status":                                "",
	"mat_screen_blur_override":                               "",
	"mat_shadowstate":                                        "",
	"mat_showenvmapmask":                                     "",
	"mat_software_aa_strength":                               "Software AA - perform a software anti-aliasing post-process (an alternative/supplement to MSAA). This value sets the strength of the effect: (0.0 - off), (1.0 - full)",
	"mat_softwarelighting":                                   "",
	"mat_specular":                                           "Enable/Disable specularity for perf testing.  Will cause a material reload upon change.",
	"mat_supportflashlight":                                  "0 - do not support flashlight (don't load flashlight shader combos), 1 - flashlight is supported",
	"mat_texture_list":                                       "For debugging, show a list of used textures per frame",
	"mat_texture_list_all":                                   "If this is nonzero, then the texture list panel will show all currently-loaded textures.",
	"mat_texture_list_all_frames":                            "How many frames to sample texture memory for all textures.",
	"mat_texture_list_exclude_editing":                       "",
	"mat_texture_list_view":                                  "If this is nonzero, then the texture list panel will render thumbnails of currently-loaded textures.",
	"mat_tonemapping_occlusion_use_stencil":                  "",
	"mat_triplebuffered":                                     "This means we want triple buffering if we are fullscreen and vsync'd",
	"mat_use_compressed_hdr_textures":                        "",
	"mat_vignette_enable":                                    "",
	"mat_vsync":                                              "Force sync to vertical retrace",
	"mem_dumpstats":                                          "Dump current and max heap usage info to console at end of frame ( set to 2 for continuous output )",
	"mem_force_flush":                                        "Force cache flush of unlocked resources on every alloc",
	"mem_force_flush_section":                                "Cache section to restrict mem_force_flush",
	"mem_level":                                              "Memory Level - Default: High",
	"mem_max_heapsize":                                       "Maximum amount of memory to dedicate to engine hunk and datacache (in mb)",
	"mem_max_heapsize_dedicated":                             "Maximum amount of memory to dedicate to engine hunk and datacache, for dedicated server (in mb)",
	"mem_min_heapsize":                                       "Minimum amount of memory to dedicate to engine hunk and datacache (in mb)",
	"mem_periodicdumps":                                      "Write periodic memstats dumps every n seconds.",
	"mem_test_each_frame":                                    "Run heap check at end of every frame",
	"mem_test_every_n_seconds":                               "Run heap check at a specified interval",
	"mem_test_quiet":                                         "Don't print stats when memtesting",
	"miniprofiler_dump":                                      "",
	"mm_datacenter_delay_mount_frames":                       "How many frames to delay before attempting to mount the xlsp patch.",
	"mm_datacenter_query_delay":                              "Delay after datacenter update is enabled before data is actually queried.",
	"mm_datacenter_report_version":                           "Data version to report to DC.",
	"mm_datacenter_retry_infochunks_attempts":                "How many times can we retry retrieving each info chunk before failing.",
	"mm_datacenter_retry_interval":                           "Interval between datacenter stats retries.",
	"mm_datacenter_update_interval":                          "Interval between datacenter stats updates.",
	"mm_events_listeners_validation":                         "",
	"mm_heartbeat_seconds":                                   "",
	"mm_heartbeat_seconds_xlsp":                              "",
	"mm_heartbeat_timeout":                                   "",
	"mm_heartbeat_timeout_legacy":                            "",
	"mm_server_search_inet_ping_interval":                    "How long to wait between pinging internet server details.",
	"mm_server_search_inet_ping_refresh":                     "How often to refresh a listed server.",
	"mm_server_search_inet_ping_timeout":                     "How long to wait for internet server details.",
	"mm_server_search_inet_ping_window":                      "How many servers can be pinged for server details in a batch.",
	"mm_server_search_lan_ping_duration":                     "Duration of LAN discovery ping phase.",
	"mm_server_search_lan_ping_interval":                     "Interval between LAN discovery pings.",
	"mm_server_search_server_lifetime":                       "How long until a server is no longer returned by the master till we remove it.",
	"mm_server_search_update_interval":                       "Interval between servers updates.",
	"mm_sv_load_test":                                        "",
	"mm_title_debug_dccheck":                                 "This matchmaking query will override datacenter connectivity: -1 for local, 1 for dedicated",
	"mm_title_debug_minquery":                                "This matchmaking query will run with minimal set of parameters",
	"mm_title_debug_version":                                 "This matchmaking version will override .res file version for isolating matchmaking",
	"mod_WeaponViewModelCache":                               "",
	"mod_WeaponWorldModelCache":                              "",
	"mod_WeaponWorldModelMinAge":                             "",
	"mod_check_vcollide":                                     "Check all vcollides on load",
	"mod_dont_load_vertices":                                 "For the dedicated server, supress loading model vertex data",
	"mod_forcedata":                                          "Forces all model file data into cache on model load.",
	"mod_forcetouchdata":                                     "Forces all model file data into cache on model load.",
	"mod_load_anims_async":                                   "",
	"mod_load_fakestall":                                     "Forces all ANI file loading to stall for specified ms",
	"mod_load_mesh_async":                                    "",
	"mod_load_preload":                                       "Indicates how far ahead in seconds to preload animations.",
	"mod_load_showstall":                                     "1 - show hitches , 2 - show stalls",
	"mod_load_vcollide_async":                                "",
	"mod_lock_mdls_on_load":                                  "",
	"mod_lock_meshes_on_load":                                "",
	"mod_test_mesh_not_available":                            "",
	"mod_test_not_available":                                 "",
	"mod_test_verts_not_available":                           "",
	"mod_touchalldata":                                       "Touch model data during level startup",
	"mod_trace_load":                                         "",
	"morph_debug":                                            "",
	"morph_path":                                             "",
	"movie_volume_scale":                                     "",
	"mp_allowNPCs":                                           "",
	"mp_allowspectators":                                     "toggles whether the server allows spectator mode or not",
	"mp_autocrosshair":                                       "",
	"mp_blockstyle":                                          "Sets the style of capture point blocking used. 0 = Blocks break captures completely. 1 = Blocks only pause captures.",
	"mp_bonusroundtime":                                      "Time after round win until round restarts",
	"mp_capdeteriorate_time":                                 "Time it takes for a full capture point to deteriorate.",
	"mp_capstyle":                                            "Sets the style of capture points used. 0 = Fixed players required to cap. 1 = More players cap faster, but longer cap times.",
	"mp_clan_ready_signal":                                   "Text that team leader from each team must speak for the match to begin",
	"mp_clan_readyrestart":                                   "If non-zero, game will restart once someone from each team gives the ready signal",
	"mp_deathcam_skippable":                                  "Determines whether a player can early-out of the deathcam.",
	"mp_defaultteam":                                         "",
	"mp_disable_respawn_times":                               "",
	"mp_enableroundwaittime":                                 "Enable timers to wait between rounds.",
	"mp_facefronttime":                                       "After this amount of time of standing in place but aiming to one side, go ahead and move feet to face upper body.",
	"mp_fadetoblack":                                         "fade a player's screen to black when he dies",
	"mp_falldamage":                                          "",
	"mp_feetyawrate":                                         "How many degrees per second that we can turn our feet or upper body.",
	"mp_flashlight":                                          "",
	"mp_flinch_punch_scale":                                  "Scalar for first person view punch when getting hit.",
	"mp_footsteps":                                           "",
	"mp_forcerespawn":                                        "",
	"mp_fraglimit":                                           "The number of kills at which the map ends",
	"mp_hostagepenalty":                                      "Terrorist are kicked for killing too much hostages",
	"mp_ik":                                                  "Use IK on in-place turns.",
	"mp_respawnwavetime":                                     "Time between respawn waves.",
	"mp_restartround":                                        "If non-zero, the current round will restart in the specified number of seconds",
	"mp_showcleanedupents":                                   "Show entities that are removed on round respawn.",
	"mp_showroundtransitions":                                "Show gamestate round transitions.",
	"mp_stalemate_at_timelimit":                              "Allow the match to end when mp_timelimit hits instead of waiting for the end of the current round.",
	"mp_stalemate_enable":                                    "Enable/Disable stalemate mode.",
	"mp_stalemate_timelimit":                                 "Timelimit (in seconds) of the stalemate round.",
	"mp_tagging_scale":                                       "Scalar for player tagging modifier when hit. Lower values for greater tagging.",
	"mp_teamlist":                                            "",
	"mp_teamoverride":                                        "",
	"mp_teamplay":                                            "",
	"mp_teams_unbalance_limit":                               "Teams are unbalanced when one team has this many more players than the other team. (0 disables check)",
	"mp_tournament":                                          "",
	"mp_tournament_whitelist":                                "Specifies the item whitelist file to use.",
	"mp_waitingforplayers_cancel":                            "Set to 1 to end the WaitingForPlayers period.",
	"mp_waitingforplayers_restart":                           "Set to 1 to start or restart the WaitingForPlayers period.",
	"mp_waitingforplayers_time":                              "WaitingForPlayers time length in seconds",
	"mp_weaponstay":                                          "",
	"mp_winlimit":                                            "Max score one team can reach before server changes maps",
	"nav_drag_selection_volume_zmax_offset":                  "The offset of the nav drag volume top from center",
	"nav_drag_selection_volume_zmin_offset":                  "The offset of the nav drag volume bottom from center",
	"nav_restart_after_analysis":                             "When nav nav_restart_after_analysis finishes, restart the server.  Turning this off can cause crashes, but is useful for incremental generation.",
	"net_allow_syslink":                                      "",
	"net_chokeloop":                                          "Apply bandwidth choke to loopback packets",
	"net_compresspackets":                                    "Use lz compression on game packets.",
	"net_compresspackets_minsize":                            "Don't bother compressing packets below this size.",
	"net_compressvoice":                                      "Attempt to compress out of band voice payloads (360 only).",
	"net_drawslider":                                         "Draw completion slider during signon",
	"net_dumptest":                                           "",
	"net_maxcleartime":                                       "Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).",
	"net_maxfilesize":                                        "Maximum allowed file size for uploading in MB",
	"net_maxfragments":                                       "Max fragment bytes per packet",
	"net_megasnapshot":                                       "",
	"net_minroutable":                                        "Forces larger payloads.",
	"net_paranoid":                                           "",
	"net_queue_trace":                                        "",
	"net_queued_packet_thread":                               "Use a high priority thread to send queued packets out instead of sending them each frame.",
	"net_showdrop":                                           "Show dropped packets in console",
	"net_showeventlisteners":                                 "Show listening addition/removals",
	"net_showevents":                                         "Dump game events to console (1=client only, 2=all).",
	"net_showfragments":                                      "Show netchannel fragments",
	"net_showmsg":                                            "Show incoming message: <0|1|name>",
	"net_showpeaks":                                          "Show messages for large packets only: <size>",
	"net_showtcp":                                            "Dump TCP stream summary to console",
	"net_steamcnx_debug":                                     "Show debug spew for steam based connections, 2 shows all network traffic for steam sockets.",
	"net_usesocketsforloopback":                              "Use network sockets layer even for listen server local player's packets (multiplayer only).",
	"npc_create_equipment":                                   "",
	"npc_go_do_run":                                          "Set whether should run on NPC go",
	"npc_sentences":                                          "",
	"npc_vphysics":                                           "",
	"old_radiusdamage":                                       "",
	"paint_alpha_offset_enabled":                             "",
	"paint_max_surface_border_alpha":                         "",
	"paint_min_valid_alpha_value":                            "",
	"pc_fake_controller":                                     "",
	"phys_enable_PIX_counters":                               "enable PIX counters",
	"phys_enable_experimental_optimizations":                 "enable some experimental SIMD/VMX128 optimizations in physics and collision",
	"phys_enable_query_cache":                                "",
	"phys_enable_simd_optimizations":                         "enable some additional SIMD/VMX128 optimizations in physics and collision",
	"phys_headshotscale":                                     "Modifier for the headshot impulse hits on players",
	"phys_impactforcescale":                                  "",
	"phys_penetration_error_time":                            "Controls the duration of vphysics penetration error boxes.",
	"phys_playerscale":                                       "This multiplies the bullet impact impuse on players for more dramatic results when players are shot.",
	"phys_pushscale":                                         "",
	"phys_speeds":                                            "",
	"phys_stressbodyweights":                                 "",
	"phys_timescale":                                         "Scale time for physics",
	"phys_upimpactforcescale":                                "",
	"physicsshadowupdate_render":                             "",
	"pipeline_static_props":                                  "",
	"player_old_armor":                                       "",
	"prop_active_gib_limit":                                  "",
	"prop_active_gib_max_fade_time":                          "",
	"prop_break_disable_float":                               "",
	"props_break_max_pieces":                                 "Maximum prop breakable piece count (-1 = model default)",
	"props_break_max_pieces_perframe":                        "Maximum prop breakable piece count per frame (-1 = model default)",
	"r_DrawSpecificStaticProp":                               "",
	"r_ForceRestore":                                         "",
	"r_ShowViewerArea":                                       "",
	"r_ambientboost":                                         "Set to boost ambient term if it is totally swamped by local lights",
	"r_ambientfactor":                                        "Boost ambient cube by no more than this factor",
	"r_ambientmin":                                           "Threshold above which ambient cube will not boost (i.e. it's already sufficiently bright",
	"r_aspectratio":                                          "",
	"r_bloomtintb":                                           "",
	"r_bloomtintexponent":                                    "",
	"r_bloomtintg":                                           "",
	"r_bloomtintr":                                           "",
	"r_buildingmapforworld":                                  "",
	"r_decal_cover_count":                                    "",
	"r_decal_overlap_area":                                   "",
	"r_decal_overlap_count":                                  "",
	"r_decals":                                               "",
	"r_decalstaticprops":                                     "Decal static props test",
	"r_drawbatchdecals":                                      "Render decals batched.",
	"r_drawmodeldecals":                                      "",
	"r_emulategl":                                            "",
	"r_entity":                                               "",
	"r_eyeglintlodpixels":                                    "The number of pixels wide an eyeball has to be before rendering an eyeglint.  Is a floating point value.",
	"r_eyes":                                                 "",
	"r_fastzreject":                                          "Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings",
	"r_fastzrejectdisp":                                      "Activates/deactivates fast z rejection on displacements (360 only). Only active when r_fastzreject is on.",
	"r_flashlight_always_cull_for_single_pass":               "",
	"r_flashlightculldepth":                                  "",
	"r_flashlightdepthtexture":                               "",
	"r_flashlightdrawdepth":                                  "",
	"r_flashlightdrawdepthres":                               "",
	"r_flashlightdrawsweptbbox":                              "",
	"r_flashlightnodraw":                                     "",
	"r_flashlightrender":                                     "",
	"r_flashlightrendermodels":                               "",
	"r_flashlightrenderworld":                                "",
	"r_flashlightscissor":                                    "",
	"r_flashlightupdatedepth":                                "",
	"r_flex":                                                 "",
	"r_frustumcullworld":                                     "",
	"r_glint_alwaysdraw":                                     "",
	"r_glint_procedural":                                     "",
	"r_hidepaintedsurfaces":                                  "If enabled, hides all surfaces which have been painted.",
	"r_hunkalloclightmaps":                                   "",
	"r_keepstyledlightmapsonly":                              "",
	"r_lightaverage":                                         "Activates/deactivate light averaging",
	"r_lightcache_zbuffercache":                              "",
	"r_lod":                                                  "",
	"r_lod_switch_scale":                                     "",
	"r_maxdlights":                                           "",
	"r_maxmodeldecal":                                        "",
	"r_maxnewsamples":                                        "",
	"r_maxsampledist":                                        "",
	"r_minnewsamples":                                        "",
	"r_norefresh":                                            "",
	"r_occludeemaxarea":                                      "Prevents occlusion testing for entities that take up more than X% of the screen. 0 means use whatever the level said to use.",
	"r_occluderminarea":                                      "Prevents this occluder from being used if it takes up less than X% of the screen. 0 means use whatever the level said to use.",
	"r_occludermincount":                                     "At least this many occluders will be used, no matter how big they are.",
	"r_occlusion":                                            "Activate/deactivate the occlusion system.",
	"r_overlayfadeenable":                                    "",
	"r_overlayfademax":                                       "",
	"r_overlayfademin":                                       "",
	"r_overlaywireframe":                                     "",
	"r_portal_use_pvs_optimization":                          "Enables an optimization that allows portals to be culled when outside of the PVS.",
	"r_portalscloseall":                                      "",
	"r_proplightingfromdisk":                                 "0=Off, 1=On, 2=Show Errors",
	"r_queued_decals":                                        "Offloads a bit of decal rendering setup work to the material system queue when enabled.",
	"r_redownloadallpaintmaps":                               "",
	"r_renderoverlayfragment":                                "",
	"r_rootlod":                                              "Root LOD",
	"r_shader_srgbread":                                      "1 = use shader srgb texture reads, 0 = use HW",
	"r_shadowrendertotexture":                                "",
	"r_shadows":                                              "",
	"r_skybox_draw_last":                                     "Draws skybox after world brush geometry, rather than before.",
	"r_snapportal":                                           "",
	"r_spray_lifetime":                                       "Number of rounds player sprays are visible",
	"r_staticlight_streams":                                  "",
	"r_staticprop_lod":                                       "",
	"r_staticpropinfo":                                       "",
	"r_teeth":                                                "",
	"r_threaded_shadow_clip":                                 "",
	"r_unloadlightmaps":                                      "",
	"r_visambient":                                           "Draw leaf ambient lighting samples.  Needs mat_leafvis 1 to work",
	"r_worldlightmin":                                        "",
	"r_worldlights":                                          "number of world lights to use per vertex",
	"reload_materials":                                       "",
	"res_restrict_access":                                    "",
	"room_type":                                              "",
	"rpt_vprof_time":                                         "",
	"rr_debug_qa":                                            "Set to 1 to see debug related to the Question & Answer system used to create conversations between allied NPCs.",
	"rr_debugresponseconcept":                                "If set, rr_debugresponses will print only responses testing for the specified concept",
	"rr_debugresponses":                                      "Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs.",
	"rr_debugrule":                                           "If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system.",
	"rr_dumpresponses":                                       "Dump all response_rules.txt and rules (requires restart)",
	"save_async":                                             "",
	"save_asyncdelay":                                        "For testing, adds this many milliseconds of delay to the save operation.",
	"save_console":                                           "Autosave on the PC behaves like it does on the consoles.",
	"save_disable":                                           "",
	"save_history_count":                                     "Keep this many old copies in history of autosaves and quicksaves.",
	"save_huddelayframes":                                    "Number of frames to defer for drawing the Saving message.",
	"save_in_memory":                                         "Set to 1 to save to memory instead of disk (Xbox 360)",
	"save_multiplayer_override":                              "",
	"save_noxsave":                                           "",
	"save_screenshot":                                        "0 = none, 1 = non-autosave, 2 = always",
	"save_spew":                                              "",
	"scene_async_prefetch_spew":                              "Display async .ani file loading info.",
	"scene_clamplookat":                                      "Clamp head turns to a MAX of 20 degrees per think.",
	"scene_clientflex":                                       "Do client side flex animation.",
	"scene_clientplayback":                                   "Play all vcds on the clients.",
	"scene_flatturn":                                         "",
	"scene_forcecombined":                                    "When playing back, force use of combined .wav files even in english.",
	"scene_maxcaptionradius":                                 "Only show closed captions if recipient is within this many units of speaking actor (0==disabled).",
	"scene_print":                                            "When playing back a scene, print timing and event info to console.",
	"score_blind_enemy_bonus":                                "Bonus for blinding enemy players",
	"score_blind_friendly_penalty":                           "Penalty for blinding friendly players",
	"score_bomb_defuse_bonus":                                "Points awarded for defusing or assisting with defuse of bomb",
	"score_bomb_defuse_radius_inner":                         "Inner radius (full bonus) for defusing or assisting with defusing the bomb",
	"score_bomb_defuse_radius_outer":                         "Outer radius (zero bonus) for defusing or assisting with defseing the bomb",
	"score_bomb_plant_bonus":                                 "Points awarded for planting or assisting with planting the bomb",
	"score_bomb_plant_radius_inner":                          "Inner radius (full bonus) for planting or assisting with planting the bomb",
	"score_bomb_plant_radius_outer":                          "Outer radius (zero bonus) for planting or assisting with planting the bomb",
	"score_damage":                                           "Points awarded for each point of damage to an enemy",
	"score_default":                                          "Default points for a new user",
	"score_dropped_bomb_proximity_damage_bonus":              "Points awarded for damaging enemy near dropped bomb",
	"score_dropped_bomb_proximity_damage_bonus_radius_inner": "Inner radius (full bonus) for doing damage near dropped bomb",
	"score_dropped_bomb_proximity_damage_bonus_radius_outer": "Outer radius (zero bonus) for doing damage near dropped bomb",
	"score_dropped_defuser_proximity_damage_bonus":           "Points awarded for damaging enemy near dropped defuser",
	"score_dropped_defuser_proximity_damage_radius_inner":    "Inner radius (full bonus) for doing damage near dropped defuser",
	"score_dropped_defuser_proximity_damage_radius_outer":    "Outer radius (zero bonus) for doing damage near dropped defuser",
	"score_ff_damage":                                        "Penalty awarded for each point of damage to a teammate",
	"score_hostage_damage_penalty":                           "Penalty for damaging a hostage",
	"score_hostage_proximity_damage_bonus":                   "Points awarded for damaging enemy near live hostage",
	"score_hostage_proximity_damage_radius_inner":            "Inner radius (full bonus) for doing damage near hostage",
	"score_hostage_proximity_damage_radius_outer":            "Outer radius (zero bonus) for doing damage near hostage",
	"score_hostage_rescue_bonus":                             "Points awarded for rescuing a hostage",
	"score_hostage_rescue_radius_inner":                      "Inner radius (full bonus) for rescuing hostage",
	"score_hostage_rescue_radius_outer":                      "Outer radius (zero bonus) for rescuing hostage",
	"score_kill_enemy_bonus":                                 "Points awarded for killing an enemy",
	"score_planted_bomb_proximity_damage_bonus":              "Points awarded for damaging enemy near planted bomb",
	"score_planted_bomb_proximity_damage_radius_inner":       "Inner radius (full bonus) for doing damage near planted bomb",
	"score_planted_bomb_proximity_damage_radius_outer":       "Outer radius (zero bonus) for doing damage near planted bomb",
	"score_team_damage_bonus":                                "Points awarded for each point of damage a nearby (in same zone) teammate does to enemies",
	"score_typical_good_score":                               "An average good score for use in funfacts",
	"script_connect_debugger_on_mapspawn":                    "",
	"server_browser_dialog_open":                             "Is the server browser window active",
	"showbudget_texture_global_sum":                          "",
	"showhitlocation":                                        "",
	"sk_ally_regen_time":                                     "Time taken for an ally to regenerate a point of health.",
	"sk_npc_arm":                                             "",
	"sk_npc_chest":                                           "",
	"sk_npc_head":                                            "",
	"sk_npc_leg":                                             "",
	"sk_npc_stomach":                                         "",
	"sk_player_arm":                                          "",
	"sk_player_chest":                                        "",
	"sk_player_head":                                         "",
	"sk_player_leg":                                          "",
	"sk_player_stomach":                                      "",
	"sleep_when_meeting_framerate":                           "Sleep instead of spinning if we're meeting the desired framerate.",
	"sleep_when_meeting_framerate_headroom_ms":               "Only sleep if the current frame has at least this much time remaining, otherwise spin.",
	"smoothstairs":                                           "Smooth player eye z coordinate when traversing stairs.",
	"snd_ShowThreadFrameTime":                                "",
	"snd_async_fullyasync":                                   "All playback is fully async (sound doesn't play until data arrives).",
	"snd_async_minsize":                                      "",
	"snd_async_spew_blocking":                                "Spew message to console any time async sound loading blocks on file i/o.",
	"snd_async_stream_fail":                                  "Spew stream pool failures.",
	"snd_async_stream_purges":                                "Spew stream pool purges.",
	"snd_async_stream_recover_from_exhausted_stream":         "If 1, recovers when the stream is exhausted when playing PCM sounds (prevents music or ambiance sounds to stop if too many sounds are played). Set to 0, to stop the sound otherwise.",
	"snd_async_stream_spew":                                  "Spew streaming info ( 0=Off, 1=streams, 2=buffers",
	"snd_async_stream_spew_delayed_start_filter":             "Filter used to spew sounds that starts late. Use an empty string \"\" to display all sounds. By default only the VO are displayed.",
	"snd_async_stream_spew_delayed_start_time":               "Spew any asynchronous sound that starts with more than N milliseconds delay. By default spew when there is more than 500 ms delay.",
	"snd_async_stream_spew_exhausted_buffer":                 "If 1, spews warnings when the buffer is exhausted (recommended). Set to 0 for no spew (for debugging purpose only).",
	"snd_async_stream_spew_exhausted_buffer_time":            "Number of milliseconds between each exhausted buffer spew.",
	"snd_async_stream_static_alloc":                          "If 1, spews allocations on the static alloc pool. Set to 0 for no spew.",
	"snd_cull_duplicates":                                    "If nonzero, aggressively cull duplicate sounds during mixing. The number specifies the number of duplicates allowed to be played.",
	"snd_debug_gaincurve":                                    "Visualize sound gain fall off",
	"snd_debug_gaincurvevol":                                 "Visualize sound gain fall off",
	"snd_defer_trace":                                        "",
	"snd_delay_for_choreo_enabled":                           "Enables update of delay for choreo to compensate for IO latency.",
	"snd_delay_for_choreo_reset_after_N_milliseconds":        "Resets the choreo latency after N milliseconds of VO not playing. Default is 500 ms.",
	"snd_delay_sound_shift":                                  "",
	"snd_dsp_cancel_old_preset_after_N_milliseconds":         "Number of milliseconds after an unused previous preset is not considered valid for the start of a cross-fade.",
	"snd_dsp_optimization":                                   "Turns optimization on for DSP effects if set to 1 (default). 0 to turn the optimization off.",
	"snd_dsp_spew_changes":                                   "Spews major changes to the dsp or presets if set to 1. 0 to turn the spew off (default).",
	"snd_dsp_test1":                                          "",
	"snd_dsp_test2":                                          "",
	"snd_find_channel":                                       "Scan every channel to find the corresponding sound.",
	"snd_lockpartial":                                        "",
	"snd_mergemethod":                                        "Sound merge method (0 == sum and clip, 1 == max, 2 == avg).",
	"snd_mix_async":                                          "",
	"snd_mix_dry_volume":                                     "",
	"snd_mix_optimization":                                   "Turns optimization on for mixing if set to 1 (default). 0 to turn the optimization off.",
	"snd_mix_soundchar_enabled":                              "Turns sound char on for mixing if set to 1 (default). 0 to turn the sound char off and use default behavior (spatial instead of doppler, directional, etc...).",
	"snd_mix_test1":                                          "",
	"snd_mix_test2":                                          "",
	"snd_moviefix":                                           "Defer sound recording until next tick when laying off movies.",
	"snd_music_boost":                                        "Specifies an amount to boost music volume by",
	"snd_noextraupdate":                                      "",
	"snd_prevent_ss_duplicates":                              "switch to en/disable the prevention of splitscreen audio file duplicates",
	"snd_profile":                                            "",
	"snd_show_channel_count":                                 "Show the current count of channel types.",
	"snd_sos_allow_dynamic_chantype":                         "",
	"snd_sos_exec_when_paused":                               "",
	"snd_sos_show_entry_match_free":                          "",
	"snd_sos_show_opvar_list":                                "",
	"snd_sos_show_source_info":                               "",
	"snd_sos_show_track_list":                                "",
	"snd_soundmixer":                                         "",
	"snd_soundmixer_parse_debug":                             "",
	"snd_soundmixer_version":                                 "",
	"snd_spatialize_roundrobin":                              "Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized per frame.",
	"snd_spew_dsp_process":                                   "Spews text every time a DSP effect is applied if set to 1. 0 to turn the spew off (default).",
	"snd_store_filepaths":                                    "",
	"snd_surround_speakers":                                  "",
	"snd_voice_echo":                                         "",
	"snd_vol_no_xfade":                                       "If current and target volumes are close, don't cross-fade.",
	"snd_vol_xfade_incr_max":                                 "Never change volume by more than +/-N units per frame during cross-fade.",
	"snd_vol_xfade_speed_multiplier_for_doppler":             "Doppler effect is extremely sensible to volume variation. To reduce the pops, the cross-fade has to be very slow.",
	"snd_vol_xfade_time":                                     "Channel volume cross-fade time in seconds.",
	"snd_vox_captiontrace":                                   "Shows sentence name for sentences which are set not to show captions.",
	"snd_vox_globaltimeout":                                  "",
	"snd_vox_sectimetout":                                    "",
	"snd_vox_seqtimetout":                                    "",
	"soundpatch_captionlength":                               "How long looping soundpatch captions should display for.",
	"ss_voice_hearpartner":                                   "Route voice between splitscreen players on same system.",
	"steamworks_sessionid_server":                            "The server session ID for the new steamworks gamestats.",
	"step_spline":                                            "",
	"stringtable_alwaysrebuilddictionaries":                  "Rebuild dictionary file on every level load",
	"stringtable_showsizes":                                  "Show sizes of string tables when building for signon",
	"stringtable_usedictionaries":                            "Use dictionaries for string table networking",
	"studio_queue_mode":                                      "",
	"sv_airaccelerate":                                       "",
	"sv_allchat":                                             "Players can receive all other players' text chat, team restrictions apply",
	"sv_allowdownload":                                       "Allow clients to download files",
	"sv_allowupload":                                         "Allow clients to upload customizations files",
	"sv_autobuyammo":                                         "Enable automatic ammo purchase when inside buy zones during buy periods",
	"sv_autosave":                                            "Set to 1 to autosave game on level transition. Does not affect autosave triggers.",
	"sv_backspeed":                                           "How much to slow down backwards motion",
	"sv_benchmark_autovprofrecord":                           "If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof.",
	"sv_benchmark_numticks":                                  "If > 0, then it only runs the benchmark for this # of ticks.",
	"sv_bonus_challenge":                                     "Set to values other than 0 to select a bonus map challenge type.",
	"sv_bot_difficulty_gamepad":                              "Bot difficulty while playing with Gamepad device",
	"sv_bot_difficulty_hydra":                                "Bot difficulty while playing with Hydra device",
	"sv_bot_difficulty_kbm":                                  "Bot difficulty while playing with Keyboard/Mouse device",
	"sv_bot_difficulty_ps3move":                              "Bot difficulty while playing with PS3Move device",
	"sv_bot_difficulty_sharpshooter":                         "Bot difficulty while playing with SharpShooter device",
	"sv_bounce":                                              "Bounce multiplier for when physically simulated objects collide with other objects.",
	"sv_cacheencodedents":                                    "If set to 1, does an optimization to prevent extra SendTable_Encode calls.",
	"sv_client_max_interp_ratio":                             "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect.",
	"sv_client_min_interp_ratio":                             "This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).               -1 = let clients set cl_interp_ratio to anything  any other value = set minimum value for cl_interp_ratio",
	"sv_client_predict":                                      "This can be used to force the value of cl_predict for connected clients (only while they are connected).    -1 = let clients set cl_predict to anything     0 = force cl_predict to 0     1 = force cl_predict to 1",
	"sv_comp_mode_allow_dc":                                  "Set this to 1 to allow direct connects in Competitive mode",
	"sv_compute_per_bot_difficulty":                          "0 = compute all bot difficulties equally, 1 = compute unique bot difficulty for each bot",
	"sv_creationtickcheck":                                   "Do extended check for encoding of timestamps against tickcount",
	"sv_debug_player_use":                                    "Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success",
	"sv_debugmanualmode":                                     "Make sure entities correctly report whether or not their network data has changed.",
	"sv_debugtempentities":                                   "Show temp entity bandwidth usage.",
	"sv_delta_entity_full_buffer_size":                       "Buffer size for delta entities",
	"sv_deltaprint":                                          "Print accumulated CalcDelta profiling data (only if sv_deltatime is on)",
	"sv_deltatime":                                           "Enable profiling of CalcDelta calls",
	"sv_disable_querycache":                                  "debug - disable trace query cache",
	"sv_disablefreezecam":                                    "Turn on/off freezecam on server",
	"sv_dumpmatchweaponmetrics":                              "Turn on the exporting of weapon metrics at the end of a level.",
	"sv_enable_delta_packing":                                "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.",
	"sv_enablebunnyhopping":                                  "",
	"sv_enableoldqueries":                                    "Enable support for old style (HL1) server queries",
	"sv_extra_client_connect_time":                           "Seconds after client connect during which extra frames are buffered to prevent non-delta'd update",
	"sv_filterban":                                           "Set packet filtering by IP mode",
	"sv_flashbang_strength":                                  "Flashbang strength",
	"sv_footsteps":                                           "Play footstep sound for players",
	"sv_force_transmit_ents":                                 "Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however).",
	"sv_gravity":                                             "World gravity.",
	"sv_hosting_lobby":                                       "",
	"sv_instancebaselines":                                   "Enable instanced baselines. Saves network overhead.",
	"sv_ladder_angle":                                        "Cos of angle of incidence to ladder perpendicular for applying ladder_dampen",
	"sv_ladder_dampen":                                       "Amount to dampen perpendicular movement on a ladder",
	"sv_lagflushbonecache":                                   "Flushes entity bone cache on lag compensation",
	"sv_lagpushticks":                                        "Push computed lag compensation amount by this many ticks.",
	"sv_logblocks":                                           "If true when log when a query is blocked (can cause very large log files)",
	"sv_logdownloadlist":                                     "",
	"sv_logsecret":                                           "If set then include this secret when doing UDP logging (will use 0x53 as packet type, not usual 0x52)",
	"sv_massreport":                                          "",
	"sv_master_legacy_mode":                                  "Use (outside-of-Steam) code to communicate with master servers.",
	"sv_master_share_game_socket":                            "Use the game's socket to communicate to the master server. If this is 0, then it will create a socket on -steamport + 1 to communicate to the master server on.",
	"sv_max_queries_sec":                                     "Maximum queries per second to respond to from a single IP address.",
	"sv_max_queries_sec_global":                              "Maximum queries per second to respond to from anywhere.",
	"sv_max_queries_window":                                  "Window over which to average queries per second averages.",
	"sv_max_usercmd_future_ticks":                            "Prevents clients from running usercmds too far in the future. Prevents speed hacks.",
	"sv_maxclientframes":                                     "",
	"sv_maxcmdrate":                                          "(If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate.",
	"sv_maxreplay":                                           "Maximum replay time in seconds",
	"sv_maxroutable":                                         "Server upper bound on net_maxroutable that a client can use.",
	"sv_maxspeed":                                            "",
	"sv_maxunlag":                                            "Maximum lag compensation in seconds",
	"sv_maxupdaterate":                                       "Maximum updates per second that the server will allow",
	"sv_maxvelocity":                                         "Maximum speed any ballistically moving object is allowed to attain per axis.",
	"sv_mmqueue_reservation":                                 "Server queue reservation",
	"sv_mmqueue_reservation_extended_timeout":                "Extended time in seconds before mmqueue reservation expires.",
	"sv_mmqueue_reservation_timeout":                         "Time in seconds before mmqueue reservation expires.",
	"sv_multiplayer_maxtempentities":                         "",
	"sv_multiplayer_sounds":                                  "",
	"sv_netvisdist":                                          "Test networking visibility distance",
	"sv_new_delta_bits":                                      "",
	"sv_nomvp":                                               "Disable MVP awards.",
	"sv_nonemesis":                                           "Disable nemesis and revenge.",
	"sv_nowinpanel":                                          "Turn on/off win panel on server",
	"sv_npc_talker_maxdist":                                  "NPCs over this distance from the player won't attempt to speak.",
	"sv_optimizedmovement":                                   "",
	"sv_parallel_packentities":                               "",
	"sv_parallel_sendsnapshot":                               "",
	"sv_pausable_dev":                                        "Whether listen server is pausable when running -dev and playing solo against bots",
	"sv_pausable_dev_ds":                                     "Whether dedicated server is pausable when running -dev and playing solo against bots",
	"sv_playerperfhistorycount":                              "Number of samples to maintain in player perf history",
	"sv_pushaway_clientside":                                 "Clientside physics push away (0=off, 1=only localplayer, 1=all players)",
	"sv_pushaway_clientside_size":                            "Minimum size of pushback objects",
	"sv_pushaway_force":                                      "How hard physics objects are pushed away from the players on the server.",
	"sv_pushaway_max_force":                                  "Maximum amount of force applied to physics objects by players.",
	"sv_pushaway_max_player_force":                           "Maximum of how hard the player is pushed away from physics objects.",
	"sv_pushaway_min_player_speed":                           "If a player is moving slower than this, don't push away physics objects (enables ducking behind things).",
	"sv_pushaway_player_force":                               "How hard the player is pushed away from physics objects (falls off with inverse square of distance).",
	"sv_rcon_banpenalty":                                     "Number of minutes to ban users who fail rcon authentication",
	"sv_rcon_log":                                            "Enable/disable rcon logging.",
	"sv_rcon_maxfailures":                                    "Max number of times a user can fail rcon authentication before being banned",
	"sv_rcon_minfailures":                                    "Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned",
	"sv_rcon_minfailuretime":                                 "Number of seconds to track failed rcon authentications",
	"sv_regeneration_wait_time":                              "",
	"sv_repeatedduckslowdown":                                "A multiplier used to slow down speed down on repeated fast ducks",
	"sv_reservation_grace":                                   "Time in seconds given for a lobby reservation.",
	"sv_rollangle":                                           "Max view roll angle",
	"sv_rollspeed":                                           "",
	"sv_runcmds":                                             "",
	"sv_script_think_interval":                               "",
	"sv_sendtables":                                          "Force full sendtable sending path.",
	"sv_show_bot_difficulty_in_name":                         "0 = hide bot difficulty in bot name, 1 = show bot difficulty in bot name",
	"sv_show_usermessage":                                    "Shows the user messages that the server is sending to clients. Setting this to 2 will show the contents of the message",
	"sv_showanimstate":                                       "Show the (server) animation state for the specified entity (-1 for none).",
	"sv_showanimstate_activities":                            "Show activities in the (server) animation state display.",
	"sv_showanimstate_log":                                   "1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both.",
	"sv_showladders":                                         "Show bbox and dismount points for all ladders (must be set before level load.)",
	"sv_showplayerhitboxes":                                  "Show lag compensated hitboxes for the specified player index whenever a player fires.",
	"sv_sound_discardextraunreliable":                        "",
	"sv_soundemitter_trace":                                  "Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)",
	"sv_soundemitter_version":                                "specfies what version of soundemitter system to use",
	"sv_stats":                                               "Collect CPU usage stats",
	"sv_stepsize":                                            "",
	"sv_stressbots":                                          "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.",
	"sv_strict_notarget":                                     "If set, notarget will cause entities to never think they are in the pvs",
	"sv_suppress_viewpunch":                                  "",
	"sv_temp_baseline_string_table_buffer_size":              "Buffer size for writing string table baselines",
	"sv_temp_entity_buffer_size":                             "Buffer size for temp entities",
	"sv_test_scripted_sequences":                             "Tests for scripted sequences that are embedded in the world. Run through your map with this set to check for NPCs falling through the world.",
	"sv_teststepsimulation":                                  "",
	"sv_thinktimecheck":                                      "Check for thinktimes all on same timestamp.",
	"sv_threaded_init":                                       "",
	"sv_timebetweenducks":                                    "Minimum time before recognizing consecutive duck key (scales up with consecutive use)",
	"sv_timeconsideredfastduck":                              "Minimum time recognizing as being a 'fast' duck",
	"sv_timeout":                                             "After this many seconds without a message from a client, the client is dropped",
	"sv_turbophysics":                                        "Turns on turbo physics",
	"sv_unlag":                                               "Enables player lag compensation",
	"sv_unlag_debug":                                         "",
	"sv_unlag_fixstuck":                                      "Disallow backtracking a player for lag compensation if it will cause them to become stuck",
	"sv_useexplicitdelete":                                   "Explicitly delete dormant client entities caused by AllowImmediateReuse().",
	"sv_validate_edict_change_infos":                         "Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode).",
	"sv_vehicle_autoaim_scale":                               "",
	"sv_voicecodec":                                          "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.",
	"sv_vote_issue_changelevel_allowed":                      "Can people hold votes to change levels?",
	"sv_vote_issue_kick_allowed":                             "Can people hold votes to kick players from the server?",
	"sv_vote_issue_nextlevel_allowextend":                    "Allow players to extend the current map?",
	"sv_vote_issue_nextlevel_choicesmode":                    "Present players with a list of lowest playtime maps to choose from?",
	"sv_vote_issue_restart_game_allowed":                     "Can people hold votes to restart the game?",
	"sv_vote_issue_scramble_teams_allowed":                   "Can people hold votes to scramble the teams?",
	"sv_vote_issue_surrrender_allowed":                       "Can people hold votes to surrender?",
	"sv_vote_issue_swap_teams_allowed":                       "Can people hold votes to swap the teams?",
	"sv_vote_kick_ban_duration":                              "How long should a kick vote ban someone from the server? (in minutes)",
	"sv_wateraccelerate":                                     "",
	"sv_waterdist":                                           "Vertical view fixup when eyes are near water plane.",
	"sv_waterfriction":                                       "",
	"sys_minidumpexpandedspew":                               "",
	"template_debug":                                         "",
	"testscript_debug":                                       "Debug test scripts.",
	"testscript_running":                                     "Set to true when test scripts are running",
	"texture_budget_panel_global":                            "Show global times in the texture budget panel.",
	"think_trace_limit":                                      "Break into the debugger if this many or more traces are performed in a single think function. Negative numbers mean that the same think function may be broken into many times (once per [x] may traces), positive numbers mean each think will break only once.",
	"threadpool_affinity":                                    "Enable setting affinity",
	"threadpool_reserve":                                     "Consume the specified number of threads in the thread pool",
	"throttle_expensive_ai":                                  "",
	"tr_best_course_time":                                    "The player's best time for the timed obstacle course",
	"tr_completed_training":                                  "Whether the local player has completed the initial training portion of the training map",
	"tr_valve_course_time":                                   "Valve's best time for the timed obstacle course",
	"trace_report":                                           "",
	"ui_volume_scale":                                        "",
	"vgui_drawfocus":                                         "Report which panel is under the mouse.",
	"vgui_drawkeyfocus":                                      "Report which panel has keyboard focus.",
	"vgui_drawtree_bounds":                                   "Show panel bounds.",
	"vgui_drawtree_draw_selected":                            "Highlight the selected panel",
	"vgui_drawtree_freeze":                                   "Set to 1 to stop updating the vgui_drawtree view.",
	"vgui_drawtree_hidden":                                   "Draw the hidden panels.",
	"vgui_drawtree_panelalpha":                               "Show the panel alpha values in the vgui_drawtree view.",
	"vgui_drawtree_panelptr":                                 "Show the panel pointer values in the vgui_drawtree view.",
	"vgui_drawtree_popupsonly":                               "Draws the vgui popup list in hierarchy(1) or most recently used(2) order.",
	"vgui_drawtree_render_order":                             "List the vgui_drawtree panels in render order.",
	"vgui_drawtree_scheme":                                   "Show scheme file for each panel",
	"vgui_drawtree_visible":                                  "Draw the visible panels.",
	"vgui_panel_active":                                      "Is a vgui panel currently active",
	"violence_ablood":                                        "Draw alien blood",
	"violence_agibs":                                         "Show alien gib entities",
	"violence_hblood":                                        "Draw human blood",
	"violence_hgibs":                                         "Show human gib entities",
	"voice_avggain":                                          "",
	"voice_debugfeedback":                                    "",
	"voice_debugfeedbackfrom":                                "",
	"voice_fadeouttime":                                      "",
	"voice_maxgain":                                          "",
	"voice_minimum_gain":                                     "",
	"voice_overdrive":                                        "",
	"voice_overdrivefadetime":                                "",
	"voice_profile":                                          "",
	"voice_serverdebug":                                      "",
	"voice_showchannels":                                     "",
	"voice_showincoming":                                     "",
	"voice_steal":                                            "",
	"voice_thresold_delay":                                   "",
	"voice_verbose":                                          "Turns on debug output with detailed spew about voice data processing.",
	"voice_vox":                                              "",
	"voice_writevoices":                                      "Saves each speaker's voice data into separate .wav files",
	"voice_xsend_debug":                                      "",
	"vprof_counters":                                         "",
	"vprof_counters_show_minmax":                             "",
	"vprof_dump_oninterval":                                  "Interval (in seconds) at which vprof will batch up data and dump it to the console.",
	"vprof_dump_spikes":                                      "Framerate at which vprof will begin to dump spikes to the console. 0 = disabled, negative to reset after dump",
	"vprof_dump_spikes_budget_group":                         "Budget gtNode to start report from when doing a dump spikes",
	"vprof_dump_spikes_hiearchy":                             "Set to 1 to get a hierarchy report whith vprof_dump_spikes",
	"vprof_dump_spikes_node":                                 "Node to start report from when doing a dump spikes",
	"vprof_dump_spikes_terse":                                "Whether to use most terse output",
	"vprof_graph":                                            "Draw the vprof graph.",
	"vprof_scope":                                            "Set a specific scope to start showing vprof tree",
	"vprof_scope_entity_gamephys":                            "",
	"vprof_scope_entity_thinks":                              "",
	"vprof_server_spike_threshold":                           "",
	"vprof_server_thread":                                    "",
	"vprof_think_limit":                                      "",
	"vx_do_not_throttle_events":                              "Force VXConsole updates every frame; smoother vprof data on PS3 but at a slight (~0.2ms) perf cost.",
	"warningcallstacks_enable":                               "All Warning()/DevWarning()/... calls will attach a callstack",
	"warningcallstacks_length":                               "Length of automatic warning callstacks",
	"weapon_accuracy_logging":                                "",
	"weapon_land_dip_amt":                                    "The amount the gun should dip when the player lands after a jump.",
	"weapon_molotov_maxdetonateslope":                        "Maximum angle of slope on which the molotov will detonate",
	"weapon_showproficiency":                                 "",
	"xbox_arcade_remaining_trial_time":                       "time remaining in trial mode",
	"xbox_arcade_title_unlocked":                             "debug unlocking arcade title",
	"xbox_steering_deadzone":                                 "",
	"xc_crouch_debounce":                                     "",
	"xlsp_force_dc_name":                                     "Restrict to xlsp datacenter by name.",
}

var (
	q = flag.String("q", "", "search query")
)

const (
	noDesc = "No Description."
)

func main() {
	flag.Parse()

	if v, ok := cvars[*q]; ok {
		if v == "" {
			v = noDesc
		}

		fmt.Println(fmt.Sprintf("%s - %s", *q, v))
		return
	}

	results := make(chan string)
	wg := sync.WaitGroup{}

	wg.Add(1)
	go func() {
		for k := range results {
			v := cvars[k]
			if v == "" {
				v = noDesc
			}

			fmt.Println(fmt.Sprintf("%s - %s", k, v))
		}
		wg.Done()
	}()

	go search(*q, results)

	wg.Wait()
}

func search(q string, results chan string) {
	for k, v := range cvars {
		if strings.Contains(k, q) || strings.Contains(v, q) {
			results <- k
		}
	}

	close(results)
}
